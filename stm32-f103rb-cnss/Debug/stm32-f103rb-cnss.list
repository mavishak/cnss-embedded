
stm32-f103rb-cnss.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001084  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001bc  080011b4  080011b4  000111b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001370  08001370  000200a0  2**0
                  CONTENTS
  4 .ARM          00000000  08001370  08001370  000200a0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001370  08001370  000200a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001370  08001370  00011370  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001374  08001374  00011374  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000a0  20000000  08001378  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000007d4  200000a0  08001418  000200a0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000874  08001418  00020874  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000045c7  00000000  00000000  000200c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000caf  00000000  00000000  00024690  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000001c0  00000000  00000000  00025340  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000158  00000000  00000000  00025500  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00010c8a  00000000  00000000  00025658  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000027ea  00000000  00000000  000362e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00058e6f  00000000  00000000  00038acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0009193b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000008c8  00000000  00000000  000919b8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200000a0 	.word	0x200000a0
 800014c:	00000000 	.word	0x00000000
 8000150:	0800119c 	.word	0x0800119c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200000a4 	.word	0x200000a4
 800016c:	0800119c 	.word	0x0800119c

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <ESPinit>:

//see: https://openweathermap.org/current
static uint8_t api[] = "api.openweathermap.org" ;
static uint8_t api_key[] = "4e622e19669401cd85da98eb2c3852f5" ;

void ESPinit(void){
 8000180:	b580      	push	{r7, lr}
 8000182:	af00      	add	r7, sp, #0

	// before useing this function init_usart1(); and  init_usart2(); must be executed

	//Reset ESP8266
	write_usart1((uint8_t*)AT_RST);
 8000184:	4855      	ldr	r0, [pc, #340]	; (80002dc <ESPinit+0x15c>)
 8000186:	f000 fa9d 	bl	80006c4 <write_usart1>

	while(!found){
 800018a:	e006      	b.n	800019a <ESPinit+0x1a>
		found = search_usart1_buffer_Rx((uint8_t *)AT_OK, (uint8_t *)"NON");
 800018c:	4954      	ldr	r1, [pc, #336]	; (80002e0 <ESPinit+0x160>)
 800018e:	4855      	ldr	r0, [pc, #340]	; (80002e4 <ESPinit+0x164>)
 8000190:	f000 fb0a 	bl	80007a8 <search_usart1_buffer_Rx>
 8000194:	4602      	mov	r2, r0
 8000196:	4b54      	ldr	r3, [pc, #336]	; (80002e8 <ESPinit+0x168>)
 8000198:	601a      	str	r2, [r3, #0]
	while(!found){
 800019a:	4b53      	ldr	r3, [pc, #332]	; (80002e8 <ESPinit+0x168>)
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	2b00      	cmp	r3, #0
 80001a0:	d0f4      	beq.n	800018c <ESPinit+0xc>
	}
	//write_usart2((uint8_t*)"AT_RST PASSED\r\n");
	found = FALSE;
 80001a2:	4b51      	ldr	r3, [pc, #324]	; (80002e8 <ESPinit+0x168>)
 80001a4:	2200      	movs	r2, #0
 80001a6:	601a      	str	r2, [r3, #0]

	//Join access point
	memset((char*)command, '\0', COMMAND_SIZE*sizeof(uint8_t));
 80001a8:	2280      	movs	r2, #128	; 0x80
 80001aa:	2100      	movs	r1, #0
 80001ac:	484f      	ldr	r0, [pc, #316]	; (80002ec <ESPinit+0x16c>)
 80001ae:	f000 fbb9 	bl	8000924 <memset>
	//command_len += strlen("AT+CIPSTART=") + strlen("TCP") + strlen("") + 7; // 7 = "",""\r\n
	//sprintf((char*)command, command_len ,"AT+CWJAP=\"%s\",\"%s\"\r\n",SSID,PWD);
	sprintf((char*)command, "AT+CWJAP=\"%s\",\"%s\"\r\n",SSID,PWD);
 80001b2:	4b4f      	ldr	r3, [pc, #316]	; (80002f0 <ESPinit+0x170>)
 80001b4:	4a4f      	ldr	r2, [pc, #316]	; (80002f4 <ESPinit+0x174>)
 80001b6:	4950      	ldr	r1, [pc, #320]	; (80002f8 <ESPinit+0x178>)
 80001b8:	484c      	ldr	r0, [pc, #304]	; (80002ec <ESPinit+0x16c>)
 80001ba:	f000 fbbb 	bl	8000934 <siprintf>

	//write_usart2((uint8_t*)command); // test
	write_usart1((uint8_t*)command);
 80001be:	484b      	ldr	r0, [pc, #300]	; (80002ec <ESPinit+0x16c>)
 80001c0:	f000 fa80 	bl	80006c4 <write_usart1>

	while(!found){
 80001c4:	e006      	b.n	80001d4 <ESPinit+0x54>
		found = search_usart1_buffer_Rx((uint8_t *)AT_OK, (uint8_t *)AT_FAIL);
 80001c6:	494d      	ldr	r1, [pc, #308]	; (80002fc <ESPinit+0x17c>)
 80001c8:	4846      	ldr	r0, [pc, #280]	; (80002e4 <ESPinit+0x164>)
 80001ca:	f000 faed 	bl	80007a8 <search_usart1_buffer_Rx>
 80001ce:	4602      	mov	r2, r0
 80001d0:	4b45      	ldr	r3, [pc, #276]	; (80002e8 <ESPinit+0x168>)
 80001d2:	601a      	str	r2, [r3, #0]
	while(!found){
 80001d4:	4b44      	ldr	r3, [pc, #272]	; (80002e8 <ESPinit+0x168>)
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f4      	beq.n	80001c6 <ESPinit+0x46>
	}
	//write_usart2((uint8_t*)"AT_CWJAP PASSED\r\n");
	found = FALSE;
 80001dc:	4b42      	ldr	r3, [pc, #264]	; (80002e8 <ESPinit+0x168>)
 80001de:	2200      	movs	r2, #0
 80001e0:	601a      	str	r2, [r3, #0]


	/*Default: AT+CIPMUX=0 (according to: AT instruction set- 5.2.15)*/

	//Connect to API
	memset((char*)command, '\0', COMMAND_SIZE*sizeof(uint8_t));
 80001e2:	2280      	movs	r2, #128	; 0x80
 80001e4:	2100      	movs	r1, #0
 80001e6:	4841      	ldr	r0, [pc, #260]	; (80002ec <ESPinit+0x16c>)
 80001e8:	f000 fb9c 	bl	8000924 <memset>
	sprintf((char*)command, "AT+CIPSTART=\"TCP\",\"%s\",80\r\n",api);
 80001ec:	4a44      	ldr	r2, [pc, #272]	; (8000300 <ESPinit+0x180>)
 80001ee:	4945      	ldr	r1, [pc, #276]	; (8000304 <ESPinit+0x184>)
 80001f0:	483e      	ldr	r0, [pc, #248]	; (80002ec <ESPinit+0x16c>)
 80001f2:	f000 fb9f 	bl	8000934 <siprintf>

	//write_usart2((uint8_t*)command); // test
	write_usart1((uint8_t*)command);
 80001f6:	483d      	ldr	r0, [pc, #244]	; (80002ec <ESPinit+0x16c>)
 80001f8:	f000 fa64 	bl	80006c4 <write_usart1>

	while(!found){
 80001fc:	e00d      	b.n	800021a <ESPinit+0x9a>
		found = search_usart1_buffer_Rx((uint8_t *)AT_OK, (uint8_t *)AT_FAIL);
 80001fe:	493f      	ldr	r1, [pc, #252]	; (80002fc <ESPinit+0x17c>)
 8000200:	4838      	ldr	r0, [pc, #224]	; (80002e4 <ESPinit+0x164>)
 8000202:	f000 fad1 	bl	80007a8 <search_usart1_buffer_Rx>
 8000206:	4602      	mov	r2, r0
 8000208:	4b37      	ldr	r3, [pc, #220]	; (80002e8 <ESPinit+0x168>)
 800020a:	601a      	str	r2, [r3, #0]
		found = search_usart1_buffer_Rx((uint8_t *)AT_OK, (uint8_t *)AT_ALREADY_CONNECTED);
 800020c:	493e      	ldr	r1, [pc, #248]	; (8000308 <ESPinit+0x188>)
 800020e:	4835      	ldr	r0, [pc, #212]	; (80002e4 <ESPinit+0x164>)
 8000210:	f000 faca 	bl	80007a8 <search_usart1_buffer_Rx>
 8000214:	4602      	mov	r2, r0
 8000216:	4b34      	ldr	r3, [pc, #208]	; (80002e8 <ESPinit+0x168>)
 8000218:	601a      	str	r2, [r3, #0]
	while(!found){
 800021a:	4b33      	ldr	r3, [pc, #204]	; (80002e8 <ESPinit+0x168>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	2b00      	cmp	r3, #0
 8000220:	d0ed      	beq.n	80001fe <ESPinit+0x7e>
	}
	//write_usart2((uint8_t*)"AT+CIPSTART PASSED\r\n");
	found = FALSE;
 8000222:	4b31      	ldr	r3, [pc, #196]	; (80002e8 <ESPinit+0x168>)
 8000224:	2200      	movs	r2, #0
 8000226:	601a      	str	r2, [r3, #0]


	//Set HTTP request
	memset((char*)http, '\0', HTTP_SIZE*sizeof(uint8_t));
 8000228:	f44f 7280 	mov.w	r2, #256	; 0x100
 800022c:	2100      	movs	r1, #0
 800022e:	4837      	ldr	r0, [pc, #220]	; (800030c <ESPinit+0x18c>)
 8000230:	f000 fb78 	bl	8000924 <memset>
	sprintf((char*)http,("GET /data/2.5/weather?q=London,uk&appid=%s HTTP/1.0\r\nHost: %s\r\n\r\n\r\n"),api_key,api); // HTTP/1.0- Allow only one request
 8000234:	4b32      	ldr	r3, [pc, #200]	; (8000300 <ESPinit+0x180>)
 8000236:	4a36      	ldr	r2, [pc, #216]	; (8000310 <ESPinit+0x190>)
 8000238:	4936      	ldr	r1, [pc, #216]	; (8000314 <ESPinit+0x194>)
 800023a:	4834      	ldr	r0, [pc, #208]	; (800030c <ESPinit+0x18c>)
 800023c:	f000 fb7a 	bl	8000934 <siprintf>
	http_len = strlen((char*)http)-strlen("\r\n"); // the last \r\n is for the AT command, and not included in the request's length
 8000240:	4832      	ldr	r0, [pc, #200]	; (800030c <ESPinit+0x18c>)
 8000242:	f7ff ff95 	bl	8000170 <strlen>
 8000246:	4603      	mov	r3, r0
 8000248:	3b02      	subs	r3, #2
 800024a:	4a33      	ldr	r2, [pc, #204]	; (8000318 <ESPinit+0x198>)
 800024c:	6013      	str	r3, [r2, #0]

	//Send number of data bytes
	memset((char*)command, '\0', COMMAND_SIZE*sizeof(uint8_t));
 800024e:	2280      	movs	r2, #128	; 0x80
 8000250:	2100      	movs	r1, #0
 8000252:	4826      	ldr	r0, [pc, #152]	; (80002ec <ESPinit+0x16c>)
 8000254:	f000 fb66 	bl	8000924 <memset>
	sprintf((char*)command, "AT+CIPSEND=%ld\r\n",http_len);
 8000258:	4b2f      	ldr	r3, [pc, #188]	; (8000318 <ESPinit+0x198>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	461a      	mov	r2, r3
 800025e:	492f      	ldr	r1, [pc, #188]	; (800031c <ESPinit+0x19c>)
 8000260:	4822      	ldr	r0, [pc, #136]	; (80002ec <ESPinit+0x16c>)
 8000262:	f000 fb67 	bl	8000934 <siprintf>


	//write_usart2((uint8_t*)command); // test
	write_usart1((uint8_t*)command);
 8000266:	4821      	ldr	r0, [pc, #132]	; (80002ec <ESPinit+0x16c>)
 8000268:	f000 fa2c 	bl	80006c4 <write_usart1>

	while(!found){
 800026c:	e006      	b.n	800027c <ESPinit+0xfc>
		found = search_usart1_buffer_Rx((uint8_t *)">", (uint8_t *)AT_ERROR);
 800026e:	492c      	ldr	r1, [pc, #176]	; (8000320 <ESPinit+0x1a0>)
 8000270:	482c      	ldr	r0, [pc, #176]	; (8000324 <ESPinit+0x1a4>)
 8000272:	f000 fa99 	bl	80007a8 <search_usart1_buffer_Rx>
 8000276:	4602      	mov	r2, r0
 8000278:	4b1b      	ldr	r3, [pc, #108]	; (80002e8 <ESPinit+0x168>)
 800027a:	601a      	str	r2, [r3, #0]
	while(!found){
 800027c:	4b1a      	ldr	r3, [pc, #104]	; (80002e8 <ESPinit+0x168>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	2b00      	cmp	r3, #0
 8000282:	d0f4      	beq.n	800026e <ESPinit+0xee>
	}
	found = FALSE;
 8000284:	4b18      	ldr	r3, [pc, #96]	; (80002e8 <ESPinit+0x168>)
 8000286:	2200      	movs	r2, #0
 8000288:	601a      	str	r2, [r3, #0]

	write_usart1((uint8_t*)http);
 800028a:	4820      	ldr	r0, [pc, #128]	; (800030c <ESPinit+0x18c>)
 800028c:	f000 fa1a 	bl	80006c4 <write_usart1>

	while(!found){
 8000290:	e006      	b.n	80002a0 <ESPinit+0x120>
		found = search_usart1_buffer_Rx((uint8_t *)AT_OK, (uint8_t *)AT_FAIL); //We counting on the appearance of OK in the HTTP response (we wont see the full response)
 8000292:	491a      	ldr	r1, [pc, #104]	; (80002fc <ESPinit+0x17c>)
 8000294:	4813      	ldr	r0, [pc, #76]	; (80002e4 <ESPinit+0x164>)
 8000296:	f000 fa87 	bl	80007a8 <search_usart1_buffer_Rx>
 800029a:	4602      	mov	r2, r0
 800029c:	4b12      	ldr	r3, [pc, #72]	; (80002e8 <ESPinit+0x168>)
 800029e:	601a      	str	r2, [r3, #0]
	while(!found){
 80002a0:	4b11      	ldr	r3, [pc, #68]	; (80002e8 <ESPinit+0x168>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d0f4      	beq.n	8000292 <ESPinit+0x112>
	}
	found = FALSE;
 80002a8:	4b0f      	ldr	r3, [pc, #60]	; (80002e8 <ESPinit+0x168>)
 80002aa:	2200      	movs	r2, #0
 80002ac:	601a      	str	r2, [r3, #0]

	//Close TCP connection
	write_usart1((uint8_t*)AT_CIPCLOSE);
 80002ae:	481e      	ldr	r0, [pc, #120]	; (8000328 <ESPinit+0x1a8>)
 80002b0:	f000 fa08 	bl	80006c4 <write_usart1>
	while(!found){
 80002b4:	e006      	b.n	80002c4 <ESPinit+0x144>
		found = search_usart1_buffer_Rx((uint8_t *)AT_OK, (uint8_t *)"NON");
 80002b6:	490a      	ldr	r1, [pc, #40]	; (80002e0 <ESPinit+0x160>)
 80002b8:	480a      	ldr	r0, [pc, #40]	; (80002e4 <ESPinit+0x164>)
 80002ba:	f000 fa75 	bl	80007a8 <search_usart1_buffer_Rx>
 80002be:	4602      	mov	r2, r0
 80002c0:	4b09      	ldr	r3, [pc, #36]	; (80002e8 <ESPinit+0x168>)
 80002c2:	601a      	str	r2, [r3, #0]
	while(!found){
 80002c4:	4b08      	ldr	r3, [pc, #32]	; (80002e8 <ESPinit+0x168>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	2b00      	cmp	r3, #0
 80002ca:	d0f4      	beq.n	80002b6 <ESPinit+0x136>
	}
	write_usart2((uint8_t*)"AT_CIPCLOSE PASSED\r\n");
 80002cc:	4817      	ldr	r0, [pc, #92]	; (800032c <ESPinit+0x1ac>)
 80002ce:	f000 f9bd 	bl	800064c <write_usart2>
	found = FALSE;
 80002d2:	4b05      	ldr	r3, [pc, #20]	; (80002e8 <ESPinit+0x168>)
 80002d4:	2200      	movs	r2, #0
 80002d6:	601a      	str	r2, [r3, #0]


}
 80002d8:	bf00      	nop
 80002da:	bd80      	pop	{r7, pc}
 80002dc:	080011b4 	.word	0x080011b4
 80002e0:	080011c0 	.word	0x080011c0
 80002e4:	080011c4 	.word	0x080011c4
 80002e8:	200000bc 	.word	0x200000bc
 80002ec:	200000c0 	.word	0x200000c0
 80002f0:	080011cc 	.word	0x080011cc
 80002f4:	080011d8 	.word	0x080011d8
 80002f8:	080011e4 	.word	0x080011e4
 80002fc:	080011fc 	.word	0x080011fc
 8000300:	20000000 	.word	0x20000000
 8000304:	08001204 	.word	0x08001204
 8000308:	08001220 	.word	0x08001220
 800030c:	20000140 	.word	0x20000140
 8000310:	20000018 	.word	0x20000018
 8000314:	08001234 	.word	0x08001234
 8000318:	20000240 	.word	0x20000240
 800031c:	08001278 	.word	0x08001278
 8000320:	0800128c 	.word	0x0800128c
 8000324:	08001294 	.word	0x08001294
 8000328:	08001298 	.word	0x08001298
 800032c:	080012a8 	.word	0x080012a8

08000330 <toggle_led>:
 8000330:	b480      	push	{r7}
 8000332:	af00      	add	r7, sp, #0
 8000334:	4b0d      	ldr	r3, [pc, #52]	; (800036c <toggle_led+0x3c>)
 8000336:	781b      	ldrb	r3, [r3, #0]
 8000338:	2b00      	cmp	r3, #0
 800033a:	d109      	bne.n	8000350 <toggle_led+0x20>
 800033c:	4b0c      	ldr	r3, [pc, #48]	; (8000370 <toggle_led+0x40>)
 800033e:	68db      	ldr	r3, [r3, #12]
 8000340:	4a0b      	ldr	r2, [pc, #44]	; (8000370 <toggle_led+0x40>)
 8000342:	f043 0320 	orr.w	r3, r3, #32
 8000346:	60d3      	str	r3, [r2, #12]
 8000348:	4b08      	ldr	r3, [pc, #32]	; (800036c <toggle_led+0x3c>)
 800034a:	2201      	movs	r2, #1
 800034c:	701a      	strb	r2, [r3, #0]
 800034e:	e008      	b.n	8000362 <toggle_led+0x32>
 8000350:	4b07      	ldr	r3, [pc, #28]	; (8000370 <toggle_led+0x40>)
 8000352:	68db      	ldr	r3, [r3, #12]
 8000354:	4a06      	ldr	r2, [pc, #24]	; (8000370 <toggle_led+0x40>)
 8000356:	f023 0320 	bic.w	r3, r3, #32
 800035a:	60d3      	str	r3, [r2, #12]
 800035c:	4b03      	ldr	r3, [pc, #12]	; (800036c <toggle_led+0x3c>)
 800035e:	2200      	movs	r2, #0
 8000360:	701a      	strb	r2, [r3, #0]
 8000362:	bf00      	nop
 8000364:	46bd      	mov	sp, r7
 8000366:	bc80      	pop	{r7}
 8000368:	4770      	bx	lr
 800036a:	bf00      	nop
 800036c:	2000086c 	.word	0x2000086c
 8000370:	40010800 	.word	0x40010800

08000374 <EXTI4_IRQHandler>:
 8000374:	b580      	push	{r7, lr}
 8000376:	af00      	add	r7, sp, #0
 8000378:	4b06      	ldr	r3, [pc, #24]	; (8000394 <EXTI4_IRQHandler+0x20>)
 800037a:	695b      	ldr	r3, [r3, #20]
 800037c:	4a05      	ldr	r2, [pc, #20]	; (8000394 <EXTI4_IRQHandler+0x20>)
 800037e:	f043 0310 	orr.w	r3, r3, #16
 8000382:	6153      	str	r3, [r2, #20]
 8000384:	f7ff ffd4 	bl	8000330 <toggle_led>
 8000388:	4803      	ldr	r0, [pc, #12]	; (8000398 <EXTI4_IRQHandler+0x24>)
 800038a:	f000 f95f 	bl	800064c <write_usart2>
 800038e:	bf00      	nop
 8000390:	bd80      	pop	{r7, pc}
 8000392:	bf00      	nop
 8000394:	40010400 	.word	0x40010400
 8000398:	080012c0 	.word	0x080012c0

0800039c <main>:
#include "esp8266_WiFi.h" /*for testing usart1...*/



int main(void)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	af00      	add	r7, sp, #0

	//init_sensor_with_interrupt();
	//init_sensor_led_response();
	init_usart2(); // for dbugging
 80003a0:	f000 f8a2 	bl	80004e8 <init_usart2>
	init_usart1(); // for ESP8266
 80003a4:	f000 f8d4 	bl	8000550 <init_usart1>
	//write_usart2((uint8_t*)AT_COMMAND);
	//write_usart1((uint8_t*)AT_COMMAND); // WRITE TEST COMAND

	ESPinit(); //THE FUNCTION NAME HAS NOTHING TO DO WITH IT"S CONTENT...! :)~
 80003a8:	f7ff feea 	bl	8000180 <ESPinit>

	while(1)
 80003ac:	e7fe      	b.n	80003ac <main+0x10>

080003ae <SysTick_Handler>:
}
*/


void SysTick_Handler(void)
{
 80003ae:	b480      	push	{r7}
 80003b0:	af00      	add	r7, sp, #0

}
 80003b2:	bf00      	nop
 80003b4:	46bd      	mov	sp, r7
 80003b6:	bc80      	pop	{r7}
 80003b8:	4770      	bx	lr
	...

080003bc <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80003bc:	b580      	push	{r7, lr}
 80003be:	b084      	sub	sp, #16
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80003c4:	4b11      	ldr	r3, [pc, #68]	; (800040c <_sbrk+0x50>)
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d102      	bne.n	80003d2 <_sbrk+0x16>
		heap_end = &end;
 80003cc:	4b0f      	ldr	r3, [pc, #60]	; (800040c <_sbrk+0x50>)
 80003ce:	4a10      	ldr	r2, [pc, #64]	; (8000410 <_sbrk+0x54>)
 80003d0:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80003d2:	4b0e      	ldr	r3, [pc, #56]	; (800040c <_sbrk+0x50>)
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80003d8:	4b0c      	ldr	r3, [pc, #48]	; (800040c <_sbrk+0x50>)
 80003da:	681a      	ldr	r2, [r3, #0]
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	4413      	add	r3, r2
 80003e0:	466a      	mov	r2, sp
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d907      	bls.n	80003f6 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80003e6:	f000 fa73 	bl	80008d0 <__errno>
 80003ea:	4602      	mov	r2, r0
 80003ec:	230c      	movs	r3, #12
 80003ee:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80003f0:	f04f 33ff 	mov.w	r3, #4294967295
 80003f4:	e006      	b.n	8000404 <_sbrk+0x48>
	}

	heap_end += incr;
 80003f6:	4b05      	ldr	r3, [pc, #20]	; (800040c <_sbrk+0x50>)
 80003f8:	681a      	ldr	r2, [r3, #0]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4413      	add	r3, r2
 80003fe:	4a03      	ldr	r2, [pc, #12]	; (800040c <_sbrk+0x50>)
 8000400:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8000402:	68fb      	ldr	r3, [r7, #12]
}
 8000404:	4618      	mov	r0, r3
 8000406:	3710      	adds	r7, #16
 8000408:	46bd      	mov	sp, r7
 800040a:	bd80      	pop	{r7, pc}
 800040c:	20000244 	.word	0x20000244
 8000410:	20000878 	.word	0x20000878

08000414 <__NVIC_SetPriorityGrouping>:
 8000414:	b480      	push	{r7}
 8000416:	b085      	sub	sp, #20
 8000418:	af00      	add	r7, sp, #0
 800041a:	6078      	str	r0, [r7, #4]
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	f003 0307 	and.w	r3, r3, #7
 8000422:	60fb      	str	r3, [r7, #12]
 8000424:	4b0c      	ldr	r3, [pc, #48]	; (8000458 <__NVIC_SetPriorityGrouping+0x44>)
 8000426:	68db      	ldr	r3, [r3, #12]
 8000428:	60bb      	str	r3, [r7, #8]
 800042a:	68ba      	ldr	r2, [r7, #8]
 800042c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000430:	4013      	ands	r3, r2
 8000432:	60bb      	str	r3, [r7, #8]
 8000434:	68fb      	ldr	r3, [r7, #12]
 8000436:	021a      	lsls	r2, r3, #8
 8000438:	68bb      	ldr	r3, [r7, #8]
 800043a:	4313      	orrs	r3, r2
 800043c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000440:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000444:	60bb      	str	r3, [r7, #8]
 8000446:	4a04      	ldr	r2, [pc, #16]	; (8000458 <__NVIC_SetPriorityGrouping+0x44>)
 8000448:	68bb      	ldr	r3, [r7, #8]
 800044a:	60d3      	str	r3, [r2, #12]
 800044c:	bf00      	nop
 800044e:	3714      	adds	r7, #20
 8000450:	46bd      	mov	sp, r7
 8000452:	bc80      	pop	{r7}
 8000454:	4770      	bx	lr
 8000456:	bf00      	nop
 8000458:	e000ed00 	.word	0xe000ed00

0800045c <__NVIC_EnableIRQ>:
 800045c:	b480      	push	{r7}
 800045e:	b083      	sub	sp, #12
 8000460:	af00      	add	r7, sp, #0
 8000462:	4603      	mov	r3, r0
 8000464:	71fb      	strb	r3, [r7, #7]
 8000466:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800046a:	2b00      	cmp	r3, #0
 800046c:	db0b      	blt.n	8000486 <__NVIC_EnableIRQ+0x2a>
 800046e:	79fb      	ldrb	r3, [r7, #7]
 8000470:	f003 021f 	and.w	r2, r3, #31
 8000474:	4906      	ldr	r1, [pc, #24]	; (8000490 <__NVIC_EnableIRQ+0x34>)
 8000476:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800047a:	095b      	lsrs	r3, r3, #5
 800047c:	2001      	movs	r0, #1
 800047e:	fa00 f202 	lsl.w	r2, r0, r2
 8000482:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000486:	bf00      	nop
 8000488:	370c      	adds	r7, #12
 800048a:	46bd      	mov	sp, r7
 800048c:	bc80      	pop	{r7}
 800048e:	4770      	bx	lr
 8000490:	e000e100 	.word	0xe000e100

08000494 <__NVIC_SetPriority>:
 8000494:	b480      	push	{r7}
 8000496:	b083      	sub	sp, #12
 8000498:	af00      	add	r7, sp, #0
 800049a:	4603      	mov	r3, r0
 800049c:	6039      	str	r1, [r7, #0]
 800049e:	71fb      	strb	r3, [r7, #7]
 80004a0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80004a4:	2b00      	cmp	r3, #0
 80004a6:	db0a      	blt.n	80004be <__NVIC_SetPriority+0x2a>
 80004a8:	683b      	ldr	r3, [r7, #0]
 80004aa:	b2da      	uxtb	r2, r3
 80004ac:	490c      	ldr	r1, [pc, #48]	; (80004e0 <__NVIC_SetPriority+0x4c>)
 80004ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80004b2:	0112      	lsls	r2, r2, #4
 80004b4:	b2d2      	uxtb	r2, r2
 80004b6:	440b      	add	r3, r1
 80004b8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80004bc:	e00a      	b.n	80004d4 <__NVIC_SetPriority+0x40>
 80004be:	683b      	ldr	r3, [r7, #0]
 80004c0:	b2da      	uxtb	r2, r3
 80004c2:	4908      	ldr	r1, [pc, #32]	; (80004e4 <__NVIC_SetPriority+0x50>)
 80004c4:	79fb      	ldrb	r3, [r7, #7]
 80004c6:	f003 030f 	and.w	r3, r3, #15
 80004ca:	3b04      	subs	r3, #4
 80004cc:	0112      	lsls	r2, r2, #4
 80004ce:	b2d2      	uxtb	r2, r2
 80004d0:	440b      	add	r3, r1
 80004d2:	761a      	strb	r2, [r3, #24]
 80004d4:	bf00      	nop
 80004d6:	370c      	adds	r7, #12
 80004d8:	46bd      	mov	sp, r7
 80004da:	bc80      	pop	{r7}
 80004dc:	4770      	bx	lr
 80004de:	bf00      	nop
 80004e0:	e000e100 	.word	0xe000e100
 80004e4:	e000ed00 	.word	0xe000ed00

080004e8 <init_usart2>:
 80004e8:	b480      	push	{r7}
 80004ea:	af00      	add	r7, sp, #0
 80004ec:	4b15      	ldr	r3, [pc, #84]	; (8000544 <init_usart2+0x5c>)
 80004ee:	699b      	ldr	r3, [r3, #24]
 80004f0:	4a14      	ldr	r2, [pc, #80]	; (8000544 <init_usart2+0x5c>)
 80004f2:	f043 0304 	orr.w	r3, r3, #4
 80004f6:	6193      	str	r3, [r2, #24]
 80004f8:	4b13      	ldr	r3, [pc, #76]	; (8000548 <init_usart2+0x60>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	4a12      	ldr	r2, [pc, #72]	; (8000548 <init_usart2+0x60>)
 80004fe:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8000502:	6013      	str	r3, [r2, #0]
 8000504:	4b10      	ldr	r3, [pc, #64]	; (8000548 <init_usart2+0x60>)
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	4a0f      	ldr	r2, [pc, #60]	; (8000548 <init_usart2+0x60>)
 800050a:	f443 6320 	orr.w	r3, r3, #2560	; 0xa00
 800050e:	6013      	str	r3, [r2, #0]
 8000510:	4b0c      	ldr	r3, [pc, #48]	; (8000544 <init_usart2+0x5c>)
 8000512:	69db      	ldr	r3, [r3, #28]
 8000514:	4a0b      	ldr	r2, [pc, #44]	; (8000544 <init_usart2+0x5c>)
 8000516:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800051a:	61d3      	str	r3, [r2, #28]
 800051c:	4b0b      	ldr	r3, [pc, #44]	; (800054c <init_usart2+0x64>)
 800051e:	68db      	ldr	r3, [r3, #12]
 8000520:	4a0a      	ldr	r2, [pc, #40]	; (800054c <init_usart2+0x64>)
 8000522:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000526:	60d3      	str	r3, [r2, #12]
 8000528:	4b08      	ldr	r3, [pc, #32]	; (800054c <init_usart2+0x64>)
 800052a:	f240 324d 	movw	r2, #845	; 0x34d
 800052e:	609a      	str	r2, [r3, #8]
 8000530:	4b06      	ldr	r3, [pc, #24]	; (800054c <init_usart2+0x64>)
 8000532:	68db      	ldr	r3, [r3, #12]
 8000534:	4a05      	ldr	r2, [pc, #20]	; (800054c <init_usart2+0x64>)
 8000536:	f043 0308 	orr.w	r3, r3, #8
 800053a:	60d3      	str	r3, [r2, #12]
 800053c:	bf00      	nop
 800053e:	46bd      	mov	sp, r7
 8000540:	bc80      	pop	{r7}
 8000542:	4770      	bx	lr
 8000544:	40021000 	.word	0x40021000
 8000548:	40010800 	.word	0x40010800
 800054c:	40004400 	.word	0x40004400

08000550 <init_usart1>:
 8000550:	b580      	push	{r7, lr}
 8000552:	af00      	add	r7, sp, #0
 8000554:	4b2a      	ldr	r3, [pc, #168]	; (8000600 <init_usart1+0xb0>)
 8000556:	699b      	ldr	r3, [r3, #24]
 8000558:	4a29      	ldr	r2, [pc, #164]	; (8000600 <init_usart1+0xb0>)
 800055a:	f043 0304 	orr.w	r3, r3, #4
 800055e:	6193      	str	r3, [r2, #24]
 8000560:	4b28      	ldr	r3, [pc, #160]	; (8000604 <init_usart1+0xb4>)
 8000562:	685b      	ldr	r3, [r3, #4]
 8000564:	4a27      	ldr	r2, [pc, #156]	; (8000604 <init_usart1+0xb4>)
 8000566:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800056a:	6053      	str	r3, [r2, #4]
 800056c:	4b25      	ldr	r3, [pc, #148]	; (8000604 <init_usart1+0xb4>)
 800056e:	685b      	ldr	r3, [r3, #4]
 8000570:	4a24      	ldr	r2, [pc, #144]	; (8000604 <init_usart1+0xb4>)
 8000572:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8000576:	6053      	str	r3, [r2, #4]
 8000578:	4b22      	ldr	r3, [pc, #136]	; (8000604 <init_usart1+0xb4>)
 800057a:	685b      	ldr	r3, [r3, #4]
 800057c:	4a21      	ldr	r2, [pc, #132]	; (8000604 <init_usart1+0xb4>)
 800057e:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8000582:	6053      	str	r3, [r2, #4]
 8000584:	4b1f      	ldr	r3, [pc, #124]	; (8000604 <init_usart1+0xb4>)
 8000586:	685b      	ldr	r3, [r3, #4]
 8000588:	4a1e      	ldr	r2, [pc, #120]	; (8000604 <init_usart1+0xb4>)
 800058a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800058e:	6053      	str	r3, [r2, #4]
 8000590:	4b1c      	ldr	r3, [pc, #112]	; (8000604 <init_usart1+0xb4>)
 8000592:	68db      	ldr	r3, [r3, #12]
 8000594:	4a1b      	ldr	r2, [pc, #108]	; (8000604 <init_usart1+0xb4>)
 8000596:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800059a:	60d3      	str	r3, [r2, #12]
 800059c:	4b18      	ldr	r3, [pc, #96]	; (8000600 <init_usart1+0xb0>)
 800059e:	699b      	ldr	r3, [r3, #24]
 80005a0:	4a17      	ldr	r2, [pc, #92]	; (8000600 <init_usart1+0xb0>)
 80005a2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005a6:	6193      	str	r3, [r2, #24]
 80005a8:	4b17      	ldr	r3, [pc, #92]	; (8000608 <init_usart1+0xb8>)
 80005aa:	68db      	ldr	r3, [r3, #12]
 80005ac:	4a16      	ldr	r2, [pc, #88]	; (8000608 <init_usart1+0xb8>)
 80005ae:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005b2:	60d3      	str	r3, [r2, #12]
 80005b4:	4b14      	ldr	r3, [pc, #80]	; (8000608 <init_usart1+0xb8>)
 80005b6:	2245      	movs	r2, #69	; 0x45
 80005b8:	609a      	str	r2, [r3, #8]
 80005ba:	4b13      	ldr	r3, [pc, #76]	; (8000608 <init_usart1+0xb8>)
 80005bc:	68db      	ldr	r3, [r3, #12]
 80005be:	4a12      	ldr	r2, [pc, #72]	; (8000608 <init_usart1+0xb8>)
 80005c0:	f043 0308 	orr.w	r3, r3, #8
 80005c4:	60d3      	str	r3, [r2, #12]
 80005c6:	f000 f8d9 	bl	800077c <set_usart1_buffer_Rx>
 80005ca:	4b0f      	ldr	r3, [pc, #60]	; (8000608 <init_usart1+0xb8>)
 80005cc:	68db      	ldr	r3, [r3, #12]
 80005ce:	4a0e      	ldr	r2, [pc, #56]	; (8000608 <init_usart1+0xb8>)
 80005d0:	f043 0304 	orr.w	r3, r3, #4
 80005d4:	60d3      	str	r3, [r2, #12]
 80005d6:	b672      	cpsid	i
 80005d8:	4b0b      	ldr	r3, [pc, #44]	; (8000608 <init_usart1+0xb8>)
 80005da:	68db      	ldr	r3, [r3, #12]
 80005dc:	4a0a      	ldr	r2, [pc, #40]	; (8000608 <init_usart1+0xb8>)
 80005de:	f043 0320 	orr.w	r3, r3, #32
 80005e2:	60d3      	str	r3, [r2, #12]
 80005e4:	2007      	movs	r0, #7
 80005e6:	f7ff ff15 	bl	8000414 <__NVIC_SetPriorityGrouping>
 80005ea:	2100      	movs	r1, #0
 80005ec:	2025      	movs	r0, #37	; 0x25
 80005ee:	f7ff ff51 	bl	8000494 <__NVIC_SetPriority>
 80005f2:	2025      	movs	r0, #37	; 0x25
 80005f4:	f7ff ff32 	bl	800045c <__NVIC_EnableIRQ>
 80005f8:	b662      	cpsie	i
 80005fa:	bf00      	nop
 80005fc:	bd80      	pop	{r7, pc}
 80005fe:	bf00      	nop
 8000600:	40021000 	.word	0x40021000
 8000604:	40010800 	.word	0x40010800
 8000608:	40013800 	.word	0x40013800

0800060c <set_usart2_buffer_Tx>:
 800060c:	b580      	push	{r7, lr}
 800060e:	b082      	sub	sp, #8
 8000610:	af00      	add	r7, sp, #0
 8000612:	6078      	str	r0, [r7, #4]
 8000614:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000618:	2100      	movs	r1, #0
 800061a:	480b      	ldr	r0, [pc, #44]	; (8000648 <set_usart2_buffer_Tx+0x3c>)
 800061c:	f000 f982 	bl	8000924 <memset>
 8000620:	6879      	ldr	r1, [r7, #4]
 8000622:	4809      	ldr	r0, [pc, #36]	; (8000648 <set_usart2_buffer_Tx+0x3c>)
 8000624:	f000 f9a6 	bl	8000974 <strcpy>
 8000628:	6878      	ldr	r0, [r7, #4]
 800062a:	f7ff fda1 	bl	8000170 <strlen>
 800062e:	4602      	mov	r2, r0
 8000630:	4b05      	ldr	r3, [pc, #20]	; (8000648 <set_usart2_buffer_Tx+0x3c>)
 8000632:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8000636:	4b04      	ldr	r3, [pc, #16]	; (8000648 <set_usart2_buffer_Tx+0x3c>)
 8000638:	2200      	movs	r2, #0
 800063a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800063e:	bf00      	nop
 8000640:	3708      	adds	r7, #8
 8000642:	46bd      	mov	sp, r7
 8000644:	bd80      	pop	{r7, pc}
 8000646:	bf00      	nop
 8000648:	20000248 	.word	0x20000248

0800064c <write_usart2>:
 800064c:	b580      	push	{r7, lr}
 800064e:	b082      	sub	sp, #8
 8000650:	af00      	add	r7, sp, #0
 8000652:	6078      	str	r0, [r7, #4]
 8000654:	6878      	ldr	r0, [r7, #4]
 8000656:	f7ff ffd9 	bl	800060c <set_usart2_buffer_Tx>
 800065a:	e014      	b.n	8000686 <write_usart2+0x3a>
 800065c:	bf00      	nop
 800065e:	4b17      	ldr	r3, [pc, #92]	; (80006bc <write_usart2+0x70>)
 8000660:	681b      	ldr	r3, [r3, #0]
 8000662:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000666:	2b00      	cmp	r3, #0
 8000668:	d0f9      	beq.n	800065e <write_usart2+0x12>
 800066a:	4b15      	ldr	r3, [pc, #84]	; (80006c0 <write_usart2+0x74>)
 800066c:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 8000670:	4a13      	ldr	r2, [pc, #76]	; (80006c0 <write_usart2+0x74>)
 8000672:	5cd2      	ldrb	r2, [r2, r3]
 8000674:	4b11      	ldr	r3, [pc, #68]	; (80006bc <write_usart2+0x70>)
 8000676:	605a      	str	r2, [r3, #4]
 8000678:	4b11      	ldr	r3, [pc, #68]	; (80006c0 <write_usart2+0x74>)
 800067a:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 800067e:	3301      	adds	r3, #1
 8000680:	4a0f      	ldr	r2, [pc, #60]	; (80006c0 <write_usart2+0x74>)
 8000682:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 8000686:	4b0e      	ldr	r3, [pc, #56]	; (80006c0 <write_usart2+0x74>)
 8000688:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800068c:	4b0c      	ldr	r3, [pc, #48]	; (80006c0 <write_usart2+0x74>)
 800068e:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8000692:	429a      	cmp	r2, r3
 8000694:	d3e2      	bcc.n	800065c <write_usart2+0x10>
 8000696:	bf00      	nop
 8000698:	4b08      	ldr	r3, [pc, #32]	; (80006bc <write_usart2+0x70>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80006a0:	2b40      	cmp	r3, #64	; 0x40
 80006a2:	d1f9      	bne.n	8000698 <write_usart2+0x4c>
 80006a4:	4b06      	ldr	r3, [pc, #24]	; (80006c0 <write_usart2+0x74>)
 80006a6:	2200      	movs	r2, #0
 80006a8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80006ac:	4b04      	ldr	r3, [pc, #16]	; (80006c0 <write_usart2+0x74>)
 80006ae:	2200      	movs	r2, #0
 80006b0:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 80006b4:	bf00      	nop
 80006b6:	3708      	adds	r7, #8
 80006b8:	46bd      	mov	sp, r7
 80006ba:	bd80      	pop	{r7, pc}
 80006bc:	40004400 	.word	0x40004400
 80006c0:	20000248 	.word	0x20000248

080006c4 <write_usart1>:
 80006c4:	b580      	push	{r7, lr}
 80006c6:	b082      	sub	sp, #8
 80006c8:	af00      	add	r7, sp, #0
 80006ca:	6078      	str	r0, [r7, #4]
 80006cc:	6878      	ldr	r0, [r7, #4]
 80006ce:	f000 f835 	bl	800073c <set_usart1_buffer_Tx>
 80006d2:	e014      	b.n	80006fe <write_usart1+0x3a>
 80006d4:	bf00      	nop
 80006d6:	4b17      	ldr	r3, [pc, #92]	; (8000734 <write_usart1+0x70>)
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80006de:	2b00      	cmp	r3, #0
 80006e0:	d0f9      	beq.n	80006d6 <write_usart1+0x12>
 80006e2:	4b15      	ldr	r3, [pc, #84]	; (8000738 <write_usart1+0x74>)
 80006e4:	f8d3 3408 	ldr.w	r3, [r3, #1032]	; 0x408
 80006e8:	4a13      	ldr	r2, [pc, #76]	; (8000738 <write_usart1+0x74>)
 80006ea:	5cd2      	ldrb	r2, [r2, r3]
 80006ec:	4b11      	ldr	r3, [pc, #68]	; (8000734 <write_usart1+0x70>)
 80006ee:	605a      	str	r2, [r3, #4]
 80006f0:	4b11      	ldr	r3, [pc, #68]	; (8000738 <write_usart1+0x74>)
 80006f2:	f8d3 3408 	ldr.w	r3, [r3, #1032]	; 0x408
 80006f6:	3301      	adds	r3, #1
 80006f8:	4a0f      	ldr	r2, [pc, #60]	; (8000738 <write_usart1+0x74>)
 80006fa:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80006fe:	4b0e      	ldr	r3, [pc, #56]	; (8000738 <write_usart1+0x74>)
 8000700:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8000704:	4b0c      	ldr	r3, [pc, #48]	; (8000738 <write_usart1+0x74>)
 8000706:	f8d3 3400 	ldr.w	r3, [r3, #1024]	; 0x400
 800070a:	429a      	cmp	r2, r3
 800070c:	d3e2      	bcc.n	80006d4 <write_usart1+0x10>
 800070e:	bf00      	nop
 8000710:	4b08      	ldr	r3, [pc, #32]	; (8000734 <write_usart1+0x70>)
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000718:	2b40      	cmp	r3, #64	; 0x40
 800071a:	d1f9      	bne.n	8000710 <write_usart1+0x4c>
 800071c:	4b06      	ldr	r3, [pc, #24]	; (8000738 <write_usart1+0x74>)
 800071e:	2200      	movs	r2, #0
 8000720:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 8000724:	4b04      	ldr	r3, [pc, #16]	; (8000738 <write_usart1+0x74>)
 8000726:	2200      	movs	r2, #0
 8000728:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800072c:	bf00      	nop
 800072e:	3708      	adds	r7, #8
 8000730:	46bd      	mov	sp, r7
 8000732:	bd80      	pop	{r7, pc}
 8000734:	40013800 	.word	0x40013800
 8000738:	20000450 	.word	0x20000450

0800073c <set_usart1_buffer_Tx>:
 800073c:	b580      	push	{r7, lr}
 800073e:	b082      	sub	sp, #8
 8000740:	af00      	add	r7, sp, #0
 8000742:	6078      	str	r0, [r7, #4]
 8000744:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000748:	2100      	movs	r1, #0
 800074a:	480b      	ldr	r0, [pc, #44]	; (8000778 <set_usart1_buffer_Tx+0x3c>)
 800074c:	f000 f8ea 	bl	8000924 <memset>
 8000750:	6879      	ldr	r1, [r7, #4]
 8000752:	4809      	ldr	r0, [pc, #36]	; (8000778 <set_usart1_buffer_Tx+0x3c>)
 8000754:	f000 f90e 	bl	8000974 <strcpy>
 8000758:	6878      	ldr	r0, [r7, #4]
 800075a:	f7ff fd09 	bl	8000170 <strlen>
 800075e:	4602      	mov	r2, r0
 8000760:	4b05      	ldr	r3, [pc, #20]	; (8000778 <set_usart1_buffer_Tx+0x3c>)
 8000762:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 8000766:	4b04      	ldr	r3, [pc, #16]	; (8000778 <set_usart1_buffer_Tx+0x3c>)
 8000768:	2200      	movs	r2, #0
 800076a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 800076e:	bf00      	nop
 8000770:	3708      	adds	r7, #8
 8000772:	46bd      	mov	sp, r7
 8000774:	bd80      	pop	{r7, pc}
 8000776:	bf00      	nop
 8000778:	20000450 	.word	0x20000450

0800077c <set_usart1_buffer_Rx>:
 800077c:	b580      	push	{r7, lr}
 800077e:	af00      	add	r7, sp, #0
 8000780:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000784:	2100      	movs	r1, #0
 8000786:	4806      	ldr	r0, [pc, #24]	; (80007a0 <set_usart1_buffer_Rx+0x24>)
 8000788:	f000 f8cc 	bl	8000924 <memset>
 800078c:	4b05      	ldr	r3, [pc, #20]	; (80007a4 <set_usart1_buffer_Rx+0x28>)
 800078e:	2200      	movs	r2, #0
 8000790:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8000794:	4b03      	ldr	r3, [pc, #12]	; (80007a4 <set_usart1_buffer_Rx+0x28>)
 8000796:	2200      	movs	r2, #0
 8000798:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800079c:	bf00      	nop
 800079e:	bd80      	pop	{r7, pc}
 80007a0:	20000650 	.word	0x20000650
 80007a4:	20000450 	.word	0x20000450

080007a8 <search_usart1_buffer_Rx>:
 80007a8:	b580      	push	{r7, lr}
 80007aa:	b082      	sub	sp, #8
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	6078      	str	r0, [r7, #4]
 80007b0:	6039      	str	r1, [r7, #0]
 80007b2:	4b15      	ldr	r3, [pc, #84]	; (8000808 <search_usart1_buffer_Rx+0x60>)
 80007b4:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 80007b8:	3301      	adds	r3, #1
 80007ba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80007be:	d21d      	bcs.n	80007fc <search_usart1_buffer_Rx+0x54>
 80007c0:	6879      	ldr	r1, [r7, #4]
 80007c2:	4812      	ldr	r0, [pc, #72]	; (800080c <search_usart1_buffer_Rx+0x64>)
 80007c4:	f000 f8de 	bl	8000984 <strstr>
 80007c8:	4603      	mov	r3, r0
 80007ca:	2b00      	cmp	r3, #0
 80007cc:	d006      	beq.n	80007dc <search_usart1_buffer_Rx+0x34>
 80007ce:	480f      	ldr	r0, [pc, #60]	; (800080c <search_usart1_buffer_Rx+0x64>)
 80007d0:	f7ff ff3c 	bl	800064c <write_usart2>
 80007d4:	f7ff ffd2 	bl	800077c <set_usart1_buffer_Rx>
 80007d8:	2301      	movs	r3, #1
 80007da:	e010      	b.n	80007fe <search_usart1_buffer_Rx+0x56>
 80007dc:	6839      	ldr	r1, [r7, #0]
 80007de:	480b      	ldr	r0, [pc, #44]	; (800080c <search_usart1_buffer_Rx+0x64>)
 80007e0:	f000 f8d0 	bl	8000984 <strstr>
 80007e4:	4603      	mov	r3, r0
 80007e6:	2b00      	cmp	r3, #0
 80007e8:	d006      	beq.n	80007f8 <search_usart1_buffer_Rx+0x50>
 80007ea:	4808      	ldr	r0, [pc, #32]	; (800080c <search_usart1_buffer_Rx+0x64>)
 80007ec:	f7ff ff2e 	bl	800064c <write_usart2>
 80007f0:	f7ff ffc4 	bl	800077c <set_usart1_buffer_Rx>
 80007f4:	2300      	movs	r3, #0
 80007f6:	e002      	b.n	80007fe <search_usart1_buffer_Rx+0x56>
 80007f8:	2300      	movs	r3, #0
 80007fa:	e000      	b.n	80007fe <search_usart1_buffer_Rx+0x56>
 80007fc:	2300      	movs	r3, #0
 80007fe:	4618      	mov	r0, r3
 8000800:	3708      	adds	r7, #8
 8000802:	46bd      	mov	sp, r7
 8000804:	bd80      	pop	{r7, pc}
 8000806:	bf00      	nop
 8000808:	20000450 	.word	0x20000450
 800080c:	20000650 	.word	0x20000650

08000810 <USART1_IRQHandler>:
 8000810:	b480      	push	{r7}
 8000812:	af00      	add	r7, sp, #0
 8000814:	4b16      	ldr	r3, [pc, #88]	; (8000870 <USART1_IRQHandler+0x60>)
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	f003 0320 	and.w	r3, r3, #32
 800081c:	2b20      	cmp	r3, #32
 800081e:	d123      	bne.n	8000868 <USART1_IRQHandler+0x58>
 8000820:	4b13      	ldr	r3, [pc, #76]	; (8000870 <USART1_IRQHandler+0x60>)
 8000822:	685b      	ldr	r3, [r3, #4]
 8000824:	b2da      	uxtb	r2, r3
 8000826:	4b13      	ldr	r3, [pc, #76]	; (8000874 <USART1_IRQHandler+0x64>)
 8000828:	701a      	strb	r2, [r3, #0]
 800082a:	4b13      	ldr	r3, [pc, #76]	; (8000878 <USART1_IRQHandler+0x68>)
 800082c:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8000830:	3301      	adds	r3, #1
 8000832:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000836:	d217      	bcs.n	8000868 <USART1_IRQHandler+0x58>
 8000838:	4b0f      	ldr	r3, [pc, #60]	; (8000878 <USART1_IRQHandler+0x68>)
 800083a:	f8d3 340c 	ldr.w	r3, [r3, #1036]	; 0x40c
 800083e:	4a0d      	ldr	r2, [pc, #52]	; (8000874 <USART1_IRQHandler+0x64>)
 8000840:	7811      	ldrb	r1, [r2, #0]
 8000842:	4a0d      	ldr	r2, [pc, #52]	; (8000878 <USART1_IRQHandler+0x68>)
 8000844:	4413      	add	r3, r2
 8000846:	460a      	mov	r2, r1
 8000848:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 800084c:	4b0a      	ldr	r3, [pc, #40]	; (8000878 <USART1_IRQHandler+0x68>)
 800084e:	f8d3 340c 	ldr.w	r3, [r3, #1036]	; 0x40c
 8000852:	3301      	adds	r3, #1
 8000854:	4a08      	ldr	r2, [pc, #32]	; (8000878 <USART1_IRQHandler+0x68>)
 8000856:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 800085a:	4b07      	ldr	r3, [pc, #28]	; (8000878 <USART1_IRQHandler+0x68>)
 800085c:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8000860:	3301      	adds	r3, #1
 8000862:	4a05      	ldr	r2, [pc, #20]	; (8000878 <USART1_IRQHandler+0x68>)
 8000864:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
 8000868:	bf00      	nop
 800086a:	46bd      	mov	sp, r7
 800086c:	bc80      	pop	{r7}
 800086e:	4770      	bx	lr
 8000870:	40013800 	.word	0x40013800
 8000874:	20000860 	.word	0x20000860
 8000878:	20000450 	.word	0x20000450

0800087c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800087c:	480d      	ldr	r0, [pc, #52]	; (80008b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800087e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000880:	480d      	ldr	r0, [pc, #52]	; (80008b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000882:	490e      	ldr	r1, [pc, #56]	; (80008bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000884:	4a0e      	ldr	r2, [pc, #56]	; (80008c0 <LoopForever+0xe>)
  movs r3, #0
 8000886:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000888:	e002      	b.n	8000890 <LoopCopyDataInit>

0800088a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800088a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800088c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800088e:	3304      	adds	r3, #4

08000890 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000890:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000892:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000894:	d3f9      	bcc.n	800088a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000896:	4a0b      	ldr	r2, [pc, #44]	; (80008c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000898:	4c0b      	ldr	r4, [pc, #44]	; (80008c8 <LoopForever+0x16>)
  movs r3, #0
 800089a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800089c:	e001      	b.n	80008a2 <LoopFillZerobss>

0800089e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800089e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008a0:	3204      	adds	r2, #4

080008a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80008a4:	d3fb      	bcc.n	800089e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80008a6:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80008aa:	f000 f817 	bl	80008dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80008ae:	f7ff fd75 	bl	800039c <main>

080008b2 <LoopForever>:

LoopForever:
    b LoopForever
 80008b2:	e7fe      	b.n	80008b2 <LoopForever>
  ldr   r0, =_estack
 80008b4:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80008b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80008bc:	200000a0 	.word	0x200000a0
  ldr r2, =_sidata
 80008c0:	08001378 	.word	0x08001378
  ldr r2, =_sbss
 80008c4:	200000a0 	.word	0x200000a0
  ldr r4, =_ebss
 80008c8:	20000874 	.word	0x20000874

080008cc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80008cc:	e7fe      	b.n	80008cc <ADC1_2_IRQHandler>
	...

080008d0 <__errno>:
 80008d0:	4b01      	ldr	r3, [pc, #4]	; (80008d8 <__errno+0x8>)
 80008d2:	6818      	ldr	r0, [r3, #0]
 80008d4:	4770      	bx	lr
 80008d6:	bf00      	nop
 80008d8:	2000003c 	.word	0x2000003c

080008dc <__libc_init_array>:
 80008dc:	b570      	push	{r4, r5, r6, lr}
 80008de:	2500      	movs	r5, #0
 80008e0:	4e0c      	ldr	r6, [pc, #48]	; (8000914 <__libc_init_array+0x38>)
 80008e2:	4c0d      	ldr	r4, [pc, #52]	; (8000918 <__libc_init_array+0x3c>)
 80008e4:	1ba4      	subs	r4, r4, r6
 80008e6:	10a4      	asrs	r4, r4, #2
 80008e8:	42a5      	cmp	r5, r4
 80008ea:	d109      	bne.n	8000900 <__libc_init_array+0x24>
 80008ec:	f000 fc56 	bl	800119c <_init>
 80008f0:	2500      	movs	r5, #0
 80008f2:	4e0a      	ldr	r6, [pc, #40]	; (800091c <__libc_init_array+0x40>)
 80008f4:	4c0a      	ldr	r4, [pc, #40]	; (8000920 <__libc_init_array+0x44>)
 80008f6:	1ba4      	subs	r4, r4, r6
 80008f8:	10a4      	asrs	r4, r4, #2
 80008fa:	42a5      	cmp	r5, r4
 80008fc:	d105      	bne.n	800090a <__libc_init_array+0x2e>
 80008fe:	bd70      	pop	{r4, r5, r6, pc}
 8000900:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000904:	4798      	blx	r3
 8000906:	3501      	adds	r5, #1
 8000908:	e7ee      	b.n	80008e8 <__libc_init_array+0xc>
 800090a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800090e:	4798      	blx	r3
 8000910:	3501      	adds	r5, #1
 8000912:	e7f2      	b.n	80008fa <__libc_init_array+0x1e>
 8000914:	08001370 	.word	0x08001370
 8000918:	08001370 	.word	0x08001370
 800091c:	08001370 	.word	0x08001370
 8000920:	08001374 	.word	0x08001374

08000924 <memset>:
 8000924:	4603      	mov	r3, r0
 8000926:	4402      	add	r2, r0
 8000928:	4293      	cmp	r3, r2
 800092a:	d100      	bne.n	800092e <memset+0xa>
 800092c:	4770      	bx	lr
 800092e:	f803 1b01 	strb.w	r1, [r3], #1
 8000932:	e7f9      	b.n	8000928 <memset+0x4>

08000934 <siprintf>:
 8000934:	b40e      	push	{r1, r2, r3}
 8000936:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800093a:	b500      	push	{lr}
 800093c:	b09c      	sub	sp, #112	; 0x70
 800093e:	ab1d      	add	r3, sp, #116	; 0x74
 8000940:	9002      	str	r0, [sp, #8]
 8000942:	9006      	str	r0, [sp, #24]
 8000944:	9107      	str	r1, [sp, #28]
 8000946:	9104      	str	r1, [sp, #16]
 8000948:	4808      	ldr	r0, [pc, #32]	; (800096c <siprintf+0x38>)
 800094a:	4909      	ldr	r1, [pc, #36]	; (8000970 <siprintf+0x3c>)
 800094c:	f853 2b04 	ldr.w	r2, [r3], #4
 8000950:	9105      	str	r1, [sp, #20]
 8000952:	6800      	ldr	r0, [r0, #0]
 8000954:	a902      	add	r1, sp, #8
 8000956:	9301      	str	r3, [sp, #4]
 8000958:	f000 f888 	bl	8000a6c <_svfiprintf_r>
 800095c:	2200      	movs	r2, #0
 800095e:	9b02      	ldr	r3, [sp, #8]
 8000960:	701a      	strb	r2, [r3, #0]
 8000962:	b01c      	add	sp, #112	; 0x70
 8000964:	f85d eb04 	ldr.w	lr, [sp], #4
 8000968:	b003      	add	sp, #12
 800096a:	4770      	bx	lr
 800096c:	2000003c 	.word	0x2000003c
 8000970:	ffff0208 	.word	0xffff0208

08000974 <strcpy>:
 8000974:	4603      	mov	r3, r0
 8000976:	f811 2b01 	ldrb.w	r2, [r1], #1
 800097a:	f803 2b01 	strb.w	r2, [r3], #1
 800097e:	2a00      	cmp	r2, #0
 8000980:	d1f9      	bne.n	8000976 <strcpy+0x2>
 8000982:	4770      	bx	lr

08000984 <strstr>:
 8000984:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000986:	7803      	ldrb	r3, [r0, #0]
 8000988:	b17b      	cbz	r3, 80009aa <strstr+0x26>
 800098a:	4604      	mov	r4, r0
 800098c:	7823      	ldrb	r3, [r4, #0]
 800098e:	4620      	mov	r0, r4
 8000990:	1c66      	adds	r6, r4, #1
 8000992:	b17b      	cbz	r3, 80009b4 <strstr+0x30>
 8000994:	1e4a      	subs	r2, r1, #1
 8000996:	1e63      	subs	r3, r4, #1
 8000998:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800099c:	b14d      	cbz	r5, 80009b2 <strstr+0x2e>
 800099e:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 80009a2:	4634      	mov	r4, r6
 80009a4:	42af      	cmp	r7, r5
 80009a6:	d0f7      	beq.n	8000998 <strstr+0x14>
 80009a8:	e7f0      	b.n	800098c <strstr+0x8>
 80009aa:	780b      	ldrb	r3, [r1, #0]
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	bf18      	it	ne
 80009b0:	2000      	movne	r0, #0
 80009b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80009b4:	4618      	mov	r0, r3
 80009b6:	e7fc      	b.n	80009b2 <strstr+0x2e>

080009b8 <__ssputs_r>:
 80009b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009bc:	688e      	ldr	r6, [r1, #8]
 80009be:	4682      	mov	sl, r0
 80009c0:	429e      	cmp	r6, r3
 80009c2:	460c      	mov	r4, r1
 80009c4:	4690      	mov	r8, r2
 80009c6:	4699      	mov	r9, r3
 80009c8:	d837      	bhi.n	8000a3a <__ssputs_r+0x82>
 80009ca:	898a      	ldrh	r2, [r1, #12]
 80009cc:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80009d0:	d031      	beq.n	8000a36 <__ssputs_r+0x7e>
 80009d2:	2302      	movs	r3, #2
 80009d4:	6825      	ldr	r5, [r4, #0]
 80009d6:	6909      	ldr	r1, [r1, #16]
 80009d8:	1a6f      	subs	r7, r5, r1
 80009da:	6965      	ldr	r5, [r4, #20]
 80009dc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80009e0:	fb95 f5f3 	sdiv	r5, r5, r3
 80009e4:	f109 0301 	add.w	r3, r9, #1
 80009e8:	443b      	add	r3, r7
 80009ea:	429d      	cmp	r5, r3
 80009ec:	bf38      	it	cc
 80009ee:	461d      	movcc	r5, r3
 80009f0:	0553      	lsls	r3, r2, #21
 80009f2:	d530      	bpl.n	8000a56 <__ssputs_r+0x9e>
 80009f4:	4629      	mov	r1, r5
 80009f6:	f000 fb37 	bl	8001068 <_malloc_r>
 80009fa:	4606      	mov	r6, r0
 80009fc:	b950      	cbnz	r0, 8000a14 <__ssputs_r+0x5c>
 80009fe:	230c      	movs	r3, #12
 8000a00:	f04f 30ff 	mov.w	r0, #4294967295
 8000a04:	f8ca 3000 	str.w	r3, [sl]
 8000a08:	89a3      	ldrh	r3, [r4, #12]
 8000a0a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a0e:	81a3      	strh	r3, [r4, #12]
 8000a10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a14:	463a      	mov	r2, r7
 8000a16:	6921      	ldr	r1, [r4, #16]
 8000a18:	f000 fab6 	bl	8000f88 <memcpy>
 8000a1c:	89a3      	ldrh	r3, [r4, #12]
 8000a1e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8000a22:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a26:	81a3      	strh	r3, [r4, #12]
 8000a28:	6126      	str	r6, [r4, #16]
 8000a2a:	443e      	add	r6, r7
 8000a2c:	6026      	str	r6, [r4, #0]
 8000a2e:	464e      	mov	r6, r9
 8000a30:	6165      	str	r5, [r4, #20]
 8000a32:	1bed      	subs	r5, r5, r7
 8000a34:	60a5      	str	r5, [r4, #8]
 8000a36:	454e      	cmp	r6, r9
 8000a38:	d900      	bls.n	8000a3c <__ssputs_r+0x84>
 8000a3a:	464e      	mov	r6, r9
 8000a3c:	4632      	mov	r2, r6
 8000a3e:	4641      	mov	r1, r8
 8000a40:	6820      	ldr	r0, [r4, #0]
 8000a42:	f000 faac 	bl	8000f9e <memmove>
 8000a46:	68a3      	ldr	r3, [r4, #8]
 8000a48:	2000      	movs	r0, #0
 8000a4a:	1b9b      	subs	r3, r3, r6
 8000a4c:	60a3      	str	r3, [r4, #8]
 8000a4e:	6823      	ldr	r3, [r4, #0]
 8000a50:	441e      	add	r6, r3
 8000a52:	6026      	str	r6, [r4, #0]
 8000a54:	e7dc      	b.n	8000a10 <__ssputs_r+0x58>
 8000a56:	462a      	mov	r2, r5
 8000a58:	f000 fb60 	bl	800111c <_realloc_r>
 8000a5c:	4606      	mov	r6, r0
 8000a5e:	2800      	cmp	r0, #0
 8000a60:	d1e2      	bne.n	8000a28 <__ssputs_r+0x70>
 8000a62:	6921      	ldr	r1, [r4, #16]
 8000a64:	4650      	mov	r0, sl
 8000a66:	f000 fab3 	bl	8000fd0 <_free_r>
 8000a6a:	e7c8      	b.n	80009fe <__ssputs_r+0x46>

08000a6c <_svfiprintf_r>:
 8000a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a70:	461d      	mov	r5, r3
 8000a72:	898b      	ldrh	r3, [r1, #12]
 8000a74:	b09d      	sub	sp, #116	; 0x74
 8000a76:	061f      	lsls	r7, r3, #24
 8000a78:	4680      	mov	r8, r0
 8000a7a:	460c      	mov	r4, r1
 8000a7c:	4616      	mov	r6, r2
 8000a7e:	d50f      	bpl.n	8000aa0 <_svfiprintf_r+0x34>
 8000a80:	690b      	ldr	r3, [r1, #16]
 8000a82:	b96b      	cbnz	r3, 8000aa0 <_svfiprintf_r+0x34>
 8000a84:	2140      	movs	r1, #64	; 0x40
 8000a86:	f000 faef 	bl	8001068 <_malloc_r>
 8000a8a:	6020      	str	r0, [r4, #0]
 8000a8c:	6120      	str	r0, [r4, #16]
 8000a8e:	b928      	cbnz	r0, 8000a9c <_svfiprintf_r+0x30>
 8000a90:	230c      	movs	r3, #12
 8000a92:	f8c8 3000 	str.w	r3, [r8]
 8000a96:	f04f 30ff 	mov.w	r0, #4294967295
 8000a9a:	e0c8      	b.n	8000c2e <_svfiprintf_r+0x1c2>
 8000a9c:	2340      	movs	r3, #64	; 0x40
 8000a9e:	6163      	str	r3, [r4, #20]
 8000aa0:	2300      	movs	r3, #0
 8000aa2:	9309      	str	r3, [sp, #36]	; 0x24
 8000aa4:	2320      	movs	r3, #32
 8000aa6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000aaa:	2330      	movs	r3, #48	; 0x30
 8000aac:	f04f 0b01 	mov.w	fp, #1
 8000ab0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000ab4:	9503      	str	r5, [sp, #12]
 8000ab6:	4637      	mov	r7, r6
 8000ab8:	463d      	mov	r5, r7
 8000aba:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000abe:	b10b      	cbz	r3, 8000ac4 <_svfiprintf_r+0x58>
 8000ac0:	2b25      	cmp	r3, #37	; 0x25
 8000ac2:	d13e      	bne.n	8000b42 <_svfiprintf_r+0xd6>
 8000ac4:	ebb7 0a06 	subs.w	sl, r7, r6
 8000ac8:	d00b      	beq.n	8000ae2 <_svfiprintf_r+0x76>
 8000aca:	4653      	mov	r3, sl
 8000acc:	4632      	mov	r2, r6
 8000ace:	4621      	mov	r1, r4
 8000ad0:	4640      	mov	r0, r8
 8000ad2:	f7ff ff71 	bl	80009b8 <__ssputs_r>
 8000ad6:	3001      	adds	r0, #1
 8000ad8:	f000 80a4 	beq.w	8000c24 <_svfiprintf_r+0x1b8>
 8000adc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ade:	4453      	add	r3, sl
 8000ae0:	9309      	str	r3, [sp, #36]	; 0x24
 8000ae2:	783b      	ldrb	r3, [r7, #0]
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	f000 809d 	beq.w	8000c24 <_svfiprintf_r+0x1b8>
 8000aea:	2300      	movs	r3, #0
 8000aec:	f04f 32ff 	mov.w	r2, #4294967295
 8000af0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000af4:	9304      	str	r3, [sp, #16]
 8000af6:	9307      	str	r3, [sp, #28]
 8000af8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000afc:	931a      	str	r3, [sp, #104]	; 0x68
 8000afe:	462f      	mov	r7, r5
 8000b00:	2205      	movs	r2, #5
 8000b02:	f817 1b01 	ldrb.w	r1, [r7], #1
 8000b06:	4850      	ldr	r0, [pc, #320]	; (8000c48 <_svfiprintf_r+0x1dc>)
 8000b08:	f000 fa30 	bl	8000f6c <memchr>
 8000b0c:	9b04      	ldr	r3, [sp, #16]
 8000b0e:	b9d0      	cbnz	r0, 8000b46 <_svfiprintf_r+0xda>
 8000b10:	06d9      	lsls	r1, r3, #27
 8000b12:	bf44      	itt	mi
 8000b14:	2220      	movmi	r2, #32
 8000b16:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000b1a:	071a      	lsls	r2, r3, #28
 8000b1c:	bf44      	itt	mi
 8000b1e:	222b      	movmi	r2, #43	; 0x2b
 8000b20:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000b24:	782a      	ldrb	r2, [r5, #0]
 8000b26:	2a2a      	cmp	r2, #42	; 0x2a
 8000b28:	d015      	beq.n	8000b56 <_svfiprintf_r+0xea>
 8000b2a:	462f      	mov	r7, r5
 8000b2c:	2000      	movs	r0, #0
 8000b2e:	250a      	movs	r5, #10
 8000b30:	9a07      	ldr	r2, [sp, #28]
 8000b32:	4639      	mov	r1, r7
 8000b34:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b38:	3b30      	subs	r3, #48	; 0x30
 8000b3a:	2b09      	cmp	r3, #9
 8000b3c:	d94d      	bls.n	8000bda <_svfiprintf_r+0x16e>
 8000b3e:	b1b8      	cbz	r0, 8000b70 <_svfiprintf_r+0x104>
 8000b40:	e00f      	b.n	8000b62 <_svfiprintf_r+0xf6>
 8000b42:	462f      	mov	r7, r5
 8000b44:	e7b8      	b.n	8000ab8 <_svfiprintf_r+0x4c>
 8000b46:	4a40      	ldr	r2, [pc, #256]	; (8000c48 <_svfiprintf_r+0x1dc>)
 8000b48:	463d      	mov	r5, r7
 8000b4a:	1a80      	subs	r0, r0, r2
 8000b4c:	fa0b f000 	lsl.w	r0, fp, r0
 8000b50:	4318      	orrs	r0, r3
 8000b52:	9004      	str	r0, [sp, #16]
 8000b54:	e7d3      	b.n	8000afe <_svfiprintf_r+0x92>
 8000b56:	9a03      	ldr	r2, [sp, #12]
 8000b58:	1d11      	adds	r1, r2, #4
 8000b5a:	6812      	ldr	r2, [r2, #0]
 8000b5c:	9103      	str	r1, [sp, #12]
 8000b5e:	2a00      	cmp	r2, #0
 8000b60:	db01      	blt.n	8000b66 <_svfiprintf_r+0xfa>
 8000b62:	9207      	str	r2, [sp, #28]
 8000b64:	e004      	b.n	8000b70 <_svfiprintf_r+0x104>
 8000b66:	4252      	negs	r2, r2
 8000b68:	f043 0302 	orr.w	r3, r3, #2
 8000b6c:	9207      	str	r2, [sp, #28]
 8000b6e:	9304      	str	r3, [sp, #16]
 8000b70:	783b      	ldrb	r3, [r7, #0]
 8000b72:	2b2e      	cmp	r3, #46	; 0x2e
 8000b74:	d10c      	bne.n	8000b90 <_svfiprintf_r+0x124>
 8000b76:	787b      	ldrb	r3, [r7, #1]
 8000b78:	2b2a      	cmp	r3, #42	; 0x2a
 8000b7a:	d133      	bne.n	8000be4 <_svfiprintf_r+0x178>
 8000b7c:	9b03      	ldr	r3, [sp, #12]
 8000b7e:	3702      	adds	r7, #2
 8000b80:	1d1a      	adds	r2, r3, #4
 8000b82:	681b      	ldr	r3, [r3, #0]
 8000b84:	9203      	str	r2, [sp, #12]
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	bfb8      	it	lt
 8000b8a:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b8e:	9305      	str	r3, [sp, #20]
 8000b90:	4d2e      	ldr	r5, [pc, #184]	; (8000c4c <_svfiprintf_r+0x1e0>)
 8000b92:	2203      	movs	r2, #3
 8000b94:	7839      	ldrb	r1, [r7, #0]
 8000b96:	4628      	mov	r0, r5
 8000b98:	f000 f9e8 	bl	8000f6c <memchr>
 8000b9c:	b138      	cbz	r0, 8000bae <_svfiprintf_r+0x142>
 8000b9e:	2340      	movs	r3, #64	; 0x40
 8000ba0:	1b40      	subs	r0, r0, r5
 8000ba2:	fa03 f000 	lsl.w	r0, r3, r0
 8000ba6:	9b04      	ldr	r3, [sp, #16]
 8000ba8:	3701      	adds	r7, #1
 8000baa:	4303      	orrs	r3, r0
 8000bac:	9304      	str	r3, [sp, #16]
 8000bae:	7839      	ldrb	r1, [r7, #0]
 8000bb0:	2206      	movs	r2, #6
 8000bb2:	4827      	ldr	r0, [pc, #156]	; (8000c50 <_svfiprintf_r+0x1e4>)
 8000bb4:	1c7e      	adds	r6, r7, #1
 8000bb6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bba:	f000 f9d7 	bl	8000f6c <memchr>
 8000bbe:	2800      	cmp	r0, #0
 8000bc0:	d038      	beq.n	8000c34 <_svfiprintf_r+0x1c8>
 8000bc2:	4b24      	ldr	r3, [pc, #144]	; (8000c54 <_svfiprintf_r+0x1e8>)
 8000bc4:	bb13      	cbnz	r3, 8000c0c <_svfiprintf_r+0x1a0>
 8000bc6:	9b03      	ldr	r3, [sp, #12]
 8000bc8:	3307      	adds	r3, #7
 8000bca:	f023 0307 	bic.w	r3, r3, #7
 8000bce:	3308      	adds	r3, #8
 8000bd0:	9303      	str	r3, [sp, #12]
 8000bd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000bd4:	444b      	add	r3, r9
 8000bd6:	9309      	str	r3, [sp, #36]	; 0x24
 8000bd8:	e76d      	b.n	8000ab6 <_svfiprintf_r+0x4a>
 8000bda:	fb05 3202 	mla	r2, r5, r2, r3
 8000bde:	2001      	movs	r0, #1
 8000be0:	460f      	mov	r7, r1
 8000be2:	e7a6      	b.n	8000b32 <_svfiprintf_r+0xc6>
 8000be4:	2300      	movs	r3, #0
 8000be6:	250a      	movs	r5, #10
 8000be8:	4619      	mov	r1, r3
 8000bea:	3701      	adds	r7, #1
 8000bec:	9305      	str	r3, [sp, #20]
 8000bee:	4638      	mov	r0, r7
 8000bf0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000bf4:	3a30      	subs	r2, #48	; 0x30
 8000bf6:	2a09      	cmp	r2, #9
 8000bf8:	d903      	bls.n	8000c02 <_svfiprintf_r+0x196>
 8000bfa:	2b00      	cmp	r3, #0
 8000bfc:	d0c8      	beq.n	8000b90 <_svfiprintf_r+0x124>
 8000bfe:	9105      	str	r1, [sp, #20]
 8000c00:	e7c6      	b.n	8000b90 <_svfiprintf_r+0x124>
 8000c02:	fb05 2101 	mla	r1, r5, r1, r2
 8000c06:	2301      	movs	r3, #1
 8000c08:	4607      	mov	r7, r0
 8000c0a:	e7f0      	b.n	8000bee <_svfiprintf_r+0x182>
 8000c0c:	ab03      	add	r3, sp, #12
 8000c0e:	9300      	str	r3, [sp, #0]
 8000c10:	4622      	mov	r2, r4
 8000c12:	4b11      	ldr	r3, [pc, #68]	; (8000c58 <_svfiprintf_r+0x1ec>)
 8000c14:	a904      	add	r1, sp, #16
 8000c16:	4640      	mov	r0, r8
 8000c18:	f3af 8000 	nop.w
 8000c1c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000c20:	4681      	mov	r9, r0
 8000c22:	d1d6      	bne.n	8000bd2 <_svfiprintf_r+0x166>
 8000c24:	89a3      	ldrh	r3, [r4, #12]
 8000c26:	065b      	lsls	r3, r3, #25
 8000c28:	f53f af35 	bmi.w	8000a96 <_svfiprintf_r+0x2a>
 8000c2c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c2e:	b01d      	add	sp, #116	; 0x74
 8000c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c34:	ab03      	add	r3, sp, #12
 8000c36:	9300      	str	r3, [sp, #0]
 8000c38:	4622      	mov	r2, r4
 8000c3a:	4b07      	ldr	r3, [pc, #28]	; (8000c58 <_svfiprintf_r+0x1ec>)
 8000c3c:	a904      	add	r1, sp, #16
 8000c3e:	4640      	mov	r0, r8
 8000c40:	f000 f882 	bl	8000d48 <_printf_i>
 8000c44:	e7ea      	b.n	8000c1c <_svfiprintf_r+0x1b0>
 8000c46:	bf00      	nop
 8000c48:	0800133d 	.word	0x0800133d
 8000c4c:	08001343 	.word	0x08001343
 8000c50:	08001347 	.word	0x08001347
 8000c54:	00000000 	.word	0x00000000
 8000c58:	080009b9 	.word	0x080009b9

08000c5c <_printf_common>:
 8000c5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c60:	4691      	mov	r9, r2
 8000c62:	461f      	mov	r7, r3
 8000c64:	688a      	ldr	r2, [r1, #8]
 8000c66:	690b      	ldr	r3, [r1, #16]
 8000c68:	4606      	mov	r6, r0
 8000c6a:	4293      	cmp	r3, r2
 8000c6c:	bfb8      	it	lt
 8000c6e:	4613      	movlt	r3, r2
 8000c70:	f8c9 3000 	str.w	r3, [r9]
 8000c74:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c78:	460c      	mov	r4, r1
 8000c7a:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c7e:	b112      	cbz	r2, 8000c86 <_printf_common+0x2a>
 8000c80:	3301      	adds	r3, #1
 8000c82:	f8c9 3000 	str.w	r3, [r9]
 8000c86:	6823      	ldr	r3, [r4, #0]
 8000c88:	0699      	lsls	r1, r3, #26
 8000c8a:	bf42      	ittt	mi
 8000c8c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000c90:	3302      	addmi	r3, #2
 8000c92:	f8c9 3000 	strmi.w	r3, [r9]
 8000c96:	6825      	ldr	r5, [r4, #0]
 8000c98:	f015 0506 	ands.w	r5, r5, #6
 8000c9c:	d107      	bne.n	8000cae <_printf_common+0x52>
 8000c9e:	f104 0a19 	add.w	sl, r4, #25
 8000ca2:	68e3      	ldr	r3, [r4, #12]
 8000ca4:	f8d9 2000 	ldr.w	r2, [r9]
 8000ca8:	1a9b      	subs	r3, r3, r2
 8000caa:	42ab      	cmp	r3, r5
 8000cac:	dc29      	bgt.n	8000d02 <_printf_common+0xa6>
 8000cae:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000cb2:	6822      	ldr	r2, [r4, #0]
 8000cb4:	3300      	adds	r3, #0
 8000cb6:	bf18      	it	ne
 8000cb8:	2301      	movne	r3, #1
 8000cba:	0692      	lsls	r2, r2, #26
 8000cbc:	d42e      	bmi.n	8000d1c <_printf_common+0xc0>
 8000cbe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cc2:	4639      	mov	r1, r7
 8000cc4:	4630      	mov	r0, r6
 8000cc6:	47c0      	blx	r8
 8000cc8:	3001      	adds	r0, #1
 8000cca:	d021      	beq.n	8000d10 <_printf_common+0xb4>
 8000ccc:	6823      	ldr	r3, [r4, #0]
 8000cce:	68e5      	ldr	r5, [r4, #12]
 8000cd0:	f003 0306 	and.w	r3, r3, #6
 8000cd4:	2b04      	cmp	r3, #4
 8000cd6:	bf18      	it	ne
 8000cd8:	2500      	movne	r5, #0
 8000cda:	f8d9 2000 	ldr.w	r2, [r9]
 8000cde:	f04f 0900 	mov.w	r9, #0
 8000ce2:	bf08      	it	eq
 8000ce4:	1aad      	subeq	r5, r5, r2
 8000ce6:	68a3      	ldr	r3, [r4, #8]
 8000ce8:	6922      	ldr	r2, [r4, #16]
 8000cea:	bf08      	it	eq
 8000cec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000cf0:	4293      	cmp	r3, r2
 8000cf2:	bfc4      	itt	gt
 8000cf4:	1a9b      	subgt	r3, r3, r2
 8000cf6:	18ed      	addgt	r5, r5, r3
 8000cf8:	341a      	adds	r4, #26
 8000cfa:	454d      	cmp	r5, r9
 8000cfc:	d11a      	bne.n	8000d34 <_printf_common+0xd8>
 8000cfe:	2000      	movs	r0, #0
 8000d00:	e008      	b.n	8000d14 <_printf_common+0xb8>
 8000d02:	2301      	movs	r3, #1
 8000d04:	4652      	mov	r2, sl
 8000d06:	4639      	mov	r1, r7
 8000d08:	4630      	mov	r0, r6
 8000d0a:	47c0      	blx	r8
 8000d0c:	3001      	adds	r0, #1
 8000d0e:	d103      	bne.n	8000d18 <_printf_common+0xbc>
 8000d10:	f04f 30ff 	mov.w	r0, #4294967295
 8000d14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d18:	3501      	adds	r5, #1
 8000d1a:	e7c2      	b.n	8000ca2 <_printf_common+0x46>
 8000d1c:	2030      	movs	r0, #48	; 0x30
 8000d1e:	18e1      	adds	r1, r4, r3
 8000d20:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d24:	1c5a      	adds	r2, r3, #1
 8000d26:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d2a:	4422      	add	r2, r4
 8000d2c:	3302      	adds	r3, #2
 8000d2e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d32:	e7c4      	b.n	8000cbe <_printf_common+0x62>
 8000d34:	2301      	movs	r3, #1
 8000d36:	4622      	mov	r2, r4
 8000d38:	4639      	mov	r1, r7
 8000d3a:	4630      	mov	r0, r6
 8000d3c:	47c0      	blx	r8
 8000d3e:	3001      	adds	r0, #1
 8000d40:	d0e6      	beq.n	8000d10 <_printf_common+0xb4>
 8000d42:	f109 0901 	add.w	r9, r9, #1
 8000d46:	e7d8      	b.n	8000cfa <_printf_common+0x9e>

08000d48 <_printf_i>:
 8000d48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000d4c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000d50:	460c      	mov	r4, r1
 8000d52:	7e09      	ldrb	r1, [r1, #24]
 8000d54:	b085      	sub	sp, #20
 8000d56:	296e      	cmp	r1, #110	; 0x6e
 8000d58:	4617      	mov	r7, r2
 8000d5a:	4606      	mov	r6, r0
 8000d5c:	4698      	mov	r8, r3
 8000d5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000d60:	f000 80b3 	beq.w	8000eca <_printf_i+0x182>
 8000d64:	d822      	bhi.n	8000dac <_printf_i+0x64>
 8000d66:	2963      	cmp	r1, #99	; 0x63
 8000d68:	d036      	beq.n	8000dd8 <_printf_i+0x90>
 8000d6a:	d80a      	bhi.n	8000d82 <_printf_i+0x3a>
 8000d6c:	2900      	cmp	r1, #0
 8000d6e:	f000 80b9 	beq.w	8000ee4 <_printf_i+0x19c>
 8000d72:	2958      	cmp	r1, #88	; 0x58
 8000d74:	f000 8083 	beq.w	8000e7e <_printf_i+0x136>
 8000d78:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d7c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000d80:	e032      	b.n	8000de8 <_printf_i+0xa0>
 8000d82:	2964      	cmp	r1, #100	; 0x64
 8000d84:	d001      	beq.n	8000d8a <_printf_i+0x42>
 8000d86:	2969      	cmp	r1, #105	; 0x69
 8000d88:	d1f6      	bne.n	8000d78 <_printf_i+0x30>
 8000d8a:	6820      	ldr	r0, [r4, #0]
 8000d8c:	6813      	ldr	r3, [r2, #0]
 8000d8e:	0605      	lsls	r5, r0, #24
 8000d90:	f103 0104 	add.w	r1, r3, #4
 8000d94:	d52a      	bpl.n	8000dec <_printf_i+0xa4>
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	6011      	str	r1, [r2, #0]
 8000d9a:	2b00      	cmp	r3, #0
 8000d9c:	da03      	bge.n	8000da6 <_printf_i+0x5e>
 8000d9e:	222d      	movs	r2, #45	; 0x2d
 8000da0:	425b      	negs	r3, r3
 8000da2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000da6:	486f      	ldr	r0, [pc, #444]	; (8000f64 <_printf_i+0x21c>)
 8000da8:	220a      	movs	r2, #10
 8000daa:	e039      	b.n	8000e20 <_printf_i+0xd8>
 8000dac:	2973      	cmp	r1, #115	; 0x73
 8000dae:	f000 809d 	beq.w	8000eec <_printf_i+0x1a4>
 8000db2:	d808      	bhi.n	8000dc6 <_printf_i+0x7e>
 8000db4:	296f      	cmp	r1, #111	; 0x6f
 8000db6:	d020      	beq.n	8000dfa <_printf_i+0xb2>
 8000db8:	2970      	cmp	r1, #112	; 0x70
 8000dba:	d1dd      	bne.n	8000d78 <_printf_i+0x30>
 8000dbc:	6823      	ldr	r3, [r4, #0]
 8000dbe:	f043 0320 	orr.w	r3, r3, #32
 8000dc2:	6023      	str	r3, [r4, #0]
 8000dc4:	e003      	b.n	8000dce <_printf_i+0x86>
 8000dc6:	2975      	cmp	r1, #117	; 0x75
 8000dc8:	d017      	beq.n	8000dfa <_printf_i+0xb2>
 8000dca:	2978      	cmp	r1, #120	; 0x78
 8000dcc:	d1d4      	bne.n	8000d78 <_printf_i+0x30>
 8000dce:	2378      	movs	r3, #120	; 0x78
 8000dd0:	4865      	ldr	r0, [pc, #404]	; (8000f68 <_printf_i+0x220>)
 8000dd2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000dd6:	e055      	b.n	8000e84 <_printf_i+0x13c>
 8000dd8:	6813      	ldr	r3, [r2, #0]
 8000dda:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000dde:	1d19      	adds	r1, r3, #4
 8000de0:	681b      	ldr	r3, [r3, #0]
 8000de2:	6011      	str	r1, [r2, #0]
 8000de4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000de8:	2301      	movs	r3, #1
 8000dea:	e08c      	b.n	8000f06 <_printf_i+0x1be>
 8000dec:	681b      	ldr	r3, [r3, #0]
 8000dee:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000df2:	6011      	str	r1, [r2, #0]
 8000df4:	bf18      	it	ne
 8000df6:	b21b      	sxthne	r3, r3
 8000df8:	e7cf      	b.n	8000d9a <_printf_i+0x52>
 8000dfa:	6813      	ldr	r3, [r2, #0]
 8000dfc:	6825      	ldr	r5, [r4, #0]
 8000dfe:	1d18      	adds	r0, r3, #4
 8000e00:	6010      	str	r0, [r2, #0]
 8000e02:	0628      	lsls	r0, r5, #24
 8000e04:	d501      	bpl.n	8000e0a <_printf_i+0xc2>
 8000e06:	681b      	ldr	r3, [r3, #0]
 8000e08:	e002      	b.n	8000e10 <_printf_i+0xc8>
 8000e0a:	0668      	lsls	r0, r5, #25
 8000e0c:	d5fb      	bpl.n	8000e06 <_printf_i+0xbe>
 8000e0e:	881b      	ldrh	r3, [r3, #0]
 8000e10:	296f      	cmp	r1, #111	; 0x6f
 8000e12:	bf14      	ite	ne
 8000e14:	220a      	movne	r2, #10
 8000e16:	2208      	moveq	r2, #8
 8000e18:	4852      	ldr	r0, [pc, #328]	; (8000f64 <_printf_i+0x21c>)
 8000e1a:	2100      	movs	r1, #0
 8000e1c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e20:	6865      	ldr	r5, [r4, #4]
 8000e22:	2d00      	cmp	r5, #0
 8000e24:	60a5      	str	r5, [r4, #8]
 8000e26:	f2c0 8095 	blt.w	8000f54 <_printf_i+0x20c>
 8000e2a:	6821      	ldr	r1, [r4, #0]
 8000e2c:	f021 0104 	bic.w	r1, r1, #4
 8000e30:	6021      	str	r1, [r4, #0]
 8000e32:	2b00      	cmp	r3, #0
 8000e34:	d13d      	bne.n	8000eb2 <_printf_i+0x16a>
 8000e36:	2d00      	cmp	r5, #0
 8000e38:	f040 808e 	bne.w	8000f58 <_printf_i+0x210>
 8000e3c:	4665      	mov	r5, ip
 8000e3e:	2a08      	cmp	r2, #8
 8000e40:	d10b      	bne.n	8000e5a <_printf_i+0x112>
 8000e42:	6823      	ldr	r3, [r4, #0]
 8000e44:	07db      	lsls	r3, r3, #31
 8000e46:	d508      	bpl.n	8000e5a <_printf_i+0x112>
 8000e48:	6923      	ldr	r3, [r4, #16]
 8000e4a:	6862      	ldr	r2, [r4, #4]
 8000e4c:	429a      	cmp	r2, r3
 8000e4e:	bfde      	ittt	le
 8000e50:	2330      	movle	r3, #48	; 0x30
 8000e52:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e56:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e5a:	ebac 0305 	sub.w	r3, ip, r5
 8000e5e:	6123      	str	r3, [r4, #16]
 8000e60:	f8cd 8000 	str.w	r8, [sp]
 8000e64:	463b      	mov	r3, r7
 8000e66:	aa03      	add	r2, sp, #12
 8000e68:	4621      	mov	r1, r4
 8000e6a:	4630      	mov	r0, r6
 8000e6c:	f7ff fef6 	bl	8000c5c <_printf_common>
 8000e70:	3001      	adds	r0, #1
 8000e72:	d14d      	bne.n	8000f10 <_printf_i+0x1c8>
 8000e74:	f04f 30ff 	mov.w	r0, #4294967295
 8000e78:	b005      	add	sp, #20
 8000e7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000e7e:	4839      	ldr	r0, [pc, #228]	; (8000f64 <_printf_i+0x21c>)
 8000e80:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000e84:	6813      	ldr	r3, [r2, #0]
 8000e86:	6821      	ldr	r1, [r4, #0]
 8000e88:	1d1d      	adds	r5, r3, #4
 8000e8a:	681b      	ldr	r3, [r3, #0]
 8000e8c:	6015      	str	r5, [r2, #0]
 8000e8e:	060a      	lsls	r2, r1, #24
 8000e90:	d50b      	bpl.n	8000eaa <_printf_i+0x162>
 8000e92:	07ca      	lsls	r2, r1, #31
 8000e94:	bf44      	itt	mi
 8000e96:	f041 0120 	orrmi.w	r1, r1, #32
 8000e9a:	6021      	strmi	r1, [r4, #0]
 8000e9c:	b91b      	cbnz	r3, 8000ea6 <_printf_i+0x15e>
 8000e9e:	6822      	ldr	r2, [r4, #0]
 8000ea0:	f022 0220 	bic.w	r2, r2, #32
 8000ea4:	6022      	str	r2, [r4, #0]
 8000ea6:	2210      	movs	r2, #16
 8000ea8:	e7b7      	b.n	8000e1a <_printf_i+0xd2>
 8000eaa:	064d      	lsls	r5, r1, #25
 8000eac:	bf48      	it	mi
 8000eae:	b29b      	uxthmi	r3, r3
 8000eb0:	e7ef      	b.n	8000e92 <_printf_i+0x14a>
 8000eb2:	4665      	mov	r5, ip
 8000eb4:	fbb3 f1f2 	udiv	r1, r3, r2
 8000eb8:	fb02 3311 	mls	r3, r2, r1, r3
 8000ebc:	5cc3      	ldrb	r3, [r0, r3]
 8000ebe:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000ec2:	460b      	mov	r3, r1
 8000ec4:	2900      	cmp	r1, #0
 8000ec6:	d1f5      	bne.n	8000eb4 <_printf_i+0x16c>
 8000ec8:	e7b9      	b.n	8000e3e <_printf_i+0xf6>
 8000eca:	6813      	ldr	r3, [r2, #0]
 8000ecc:	6825      	ldr	r5, [r4, #0]
 8000ece:	1d18      	adds	r0, r3, #4
 8000ed0:	6961      	ldr	r1, [r4, #20]
 8000ed2:	6010      	str	r0, [r2, #0]
 8000ed4:	0628      	lsls	r0, r5, #24
 8000ed6:	681b      	ldr	r3, [r3, #0]
 8000ed8:	d501      	bpl.n	8000ede <_printf_i+0x196>
 8000eda:	6019      	str	r1, [r3, #0]
 8000edc:	e002      	b.n	8000ee4 <_printf_i+0x19c>
 8000ede:	066a      	lsls	r2, r5, #25
 8000ee0:	d5fb      	bpl.n	8000eda <_printf_i+0x192>
 8000ee2:	8019      	strh	r1, [r3, #0]
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	4665      	mov	r5, ip
 8000ee8:	6123      	str	r3, [r4, #16]
 8000eea:	e7b9      	b.n	8000e60 <_printf_i+0x118>
 8000eec:	6813      	ldr	r3, [r2, #0]
 8000eee:	1d19      	adds	r1, r3, #4
 8000ef0:	6011      	str	r1, [r2, #0]
 8000ef2:	681d      	ldr	r5, [r3, #0]
 8000ef4:	6862      	ldr	r2, [r4, #4]
 8000ef6:	2100      	movs	r1, #0
 8000ef8:	4628      	mov	r0, r5
 8000efa:	f000 f837 	bl	8000f6c <memchr>
 8000efe:	b108      	cbz	r0, 8000f04 <_printf_i+0x1bc>
 8000f00:	1b40      	subs	r0, r0, r5
 8000f02:	6060      	str	r0, [r4, #4]
 8000f04:	6863      	ldr	r3, [r4, #4]
 8000f06:	6123      	str	r3, [r4, #16]
 8000f08:	2300      	movs	r3, #0
 8000f0a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f0e:	e7a7      	b.n	8000e60 <_printf_i+0x118>
 8000f10:	6923      	ldr	r3, [r4, #16]
 8000f12:	462a      	mov	r2, r5
 8000f14:	4639      	mov	r1, r7
 8000f16:	4630      	mov	r0, r6
 8000f18:	47c0      	blx	r8
 8000f1a:	3001      	adds	r0, #1
 8000f1c:	d0aa      	beq.n	8000e74 <_printf_i+0x12c>
 8000f1e:	6823      	ldr	r3, [r4, #0]
 8000f20:	079b      	lsls	r3, r3, #30
 8000f22:	d413      	bmi.n	8000f4c <_printf_i+0x204>
 8000f24:	68e0      	ldr	r0, [r4, #12]
 8000f26:	9b03      	ldr	r3, [sp, #12]
 8000f28:	4298      	cmp	r0, r3
 8000f2a:	bfb8      	it	lt
 8000f2c:	4618      	movlt	r0, r3
 8000f2e:	e7a3      	b.n	8000e78 <_printf_i+0x130>
 8000f30:	2301      	movs	r3, #1
 8000f32:	464a      	mov	r2, r9
 8000f34:	4639      	mov	r1, r7
 8000f36:	4630      	mov	r0, r6
 8000f38:	47c0      	blx	r8
 8000f3a:	3001      	adds	r0, #1
 8000f3c:	d09a      	beq.n	8000e74 <_printf_i+0x12c>
 8000f3e:	3501      	adds	r5, #1
 8000f40:	68e3      	ldr	r3, [r4, #12]
 8000f42:	9a03      	ldr	r2, [sp, #12]
 8000f44:	1a9b      	subs	r3, r3, r2
 8000f46:	42ab      	cmp	r3, r5
 8000f48:	dcf2      	bgt.n	8000f30 <_printf_i+0x1e8>
 8000f4a:	e7eb      	b.n	8000f24 <_printf_i+0x1dc>
 8000f4c:	2500      	movs	r5, #0
 8000f4e:	f104 0919 	add.w	r9, r4, #25
 8000f52:	e7f5      	b.n	8000f40 <_printf_i+0x1f8>
 8000f54:	2b00      	cmp	r3, #0
 8000f56:	d1ac      	bne.n	8000eb2 <_printf_i+0x16a>
 8000f58:	7803      	ldrb	r3, [r0, #0]
 8000f5a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000f5e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000f62:	e76c      	b.n	8000e3e <_printf_i+0xf6>
 8000f64:	0800134e 	.word	0x0800134e
 8000f68:	0800135f 	.word	0x0800135f

08000f6c <memchr>:
 8000f6c:	b510      	push	{r4, lr}
 8000f6e:	b2c9      	uxtb	r1, r1
 8000f70:	4402      	add	r2, r0
 8000f72:	4290      	cmp	r0, r2
 8000f74:	4603      	mov	r3, r0
 8000f76:	d101      	bne.n	8000f7c <memchr+0x10>
 8000f78:	2300      	movs	r3, #0
 8000f7a:	e003      	b.n	8000f84 <memchr+0x18>
 8000f7c:	781c      	ldrb	r4, [r3, #0]
 8000f7e:	3001      	adds	r0, #1
 8000f80:	428c      	cmp	r4, r1
 8000f82:	d1f6      	bne.n	8000f72 <memchr+0x6>
 8000f84:	4618      	mov	r0, r3
 8000f86:	bd10      	pop	{r4, pc}

08000f88 <memcpy>:
 8000f88:	b510      	push	{r4, lr}
 8000f8a:	1e43      	subs	r3, r0, #1
 8000f8c:	440a      	add	r2, r1
 8000f8e:	4291      	cmp	r1, r2
 8000f90:	d100      	bne.n	8000f94 <memcpy+0xc>
 8000f92:	bd10      	pop	{r4, pc}
 8000f94:	f811 4b01 	ldrb.w	r4, [r1], #1
 8000f98:	f803 4f01 	strb.w	r4, [r3, #1]!
 8000f9c:	e7f7      	b.n	8000f8e <memcpy+0x6>

08000f9e <memmove>:
 8000f9e:	4288      	cmp	r0, r1
 8000fa0:	b510      	push	{r4, lr}
 8000fa2:	eb01 0302 	add.w	r3, r1, r2
 8000fa6:	d807      	bhi.n	8000fb8 <memmove+0x1a>
 8000fa8:	1e42      	subs	r2, r0, #1
 8000faa:	4299      	cmp	r1, r3
 8000fac:	d00a      	beq.n	8000fc4 <memmove+0x26>
 8000fae:	f811 4b01 	ldrb.w	r4, [r1], #1
 8000fb2:	f802 4f01 	strb.w	r4, [r2, #1]!
 8000fb6:	e7f8      	b.n	8000faa <memmove+0xc>
 8000fb8:	4283      	cmp	r3, r0
 8000fba:	d9f5      	bls.n	8000fa8 <memmove+0xa>
 8000fbc:	1881      	adds	r1, r0, r2
 8000fbe:	1ad2      	subs	r2, r2, r3
 8000fc0:	42d3      	cmn	r3, r2
 8000fc2:	d100      	bne.n	8000fc6 <memmove+0x28>
 8000fc4:	bd10      	pop	{r4, pc}
 8000fc6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8000fca:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8000fce:	e7f7      	b.n	8000fc0 <memmove+0x22>

08000fd0 <_free_r>:
 8000fd0:	b538      	push	{r3, r4, r5, lr}
 8000fd2:	4605      	mov	r5, r0
 8000fd4:	2900      	cmp	r1, #0
 8000fd6:	d043      	beq.n	8001060 <_free_r+0x90>
 8000fd8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000fdc:	1f0c      	subs	r4, r1, #4
 8000fde:	2b00      	cmp	r3, #0
 8000fe0:	bfb8      	it	lt
 8000fe2:	18e4      	addlt	r4, r4, r3
 8000fe4:	f000 f8d0 	bl	8001188 <__malloc_lock>
 8000fe8:	4a1e      	ldr	r2, [pc, #120]	; (8001064 <_free_r+0x94>)
 8000fea:	6813      	ldr	r3, [r2, #0]
 8000fec:	4610      	mov	r0, r2
 8000fee:	b933      	cbnz	r3, 8000ffe <_free_r+0x2e>
 8000ff0:	6063      	str	r3, [r4, #4]
 8000ff2:	6014      	str	r4, [r2, #0]
 8000ff4:	4628      	mov	r0, r5
 8000ff6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ffa:	f000 b8c6 	b.w	800118a <__malloc_unlock>
 8000ffe:	42a3      	cmp	r3, r4
 8001000:	d90b      	bls.n	800101a <_free_r+0x4a>
 8001002:	6821      	ldr	r1, [r4, #0]
 8001004:	1862      	adds	r2, r4, r1
 8001006:	4293      	cmp	r3, r2
 8001008:	bf01      	itttt	eq
 800100a:	681a      	ldreq	r2, [r3, #0]
 800100c:	685b      	ldreq	r3, [r3, #4]
 800100e:	1852      	addeq	r2, r2, r1
 8001010:	6022      	streq	r2, [r4, #0]
 8001012:	6063      	str	r3, [r4, #4]
 8001014:	6004      	str	r4, [r0, #0]
 8001016:	e7ed      	b.n	8000ff4 <_free_r+0x24>
 8001018:	4613      	mov	r3, r2
 800101a:	685a      	ldr	r2, [r3, #4]
 800101c:	b10a      	cbz	r2, 8001022 <_free_r+0x52>
 800101e:	42a2      	cmp	r2, r4
 8001020:	d9fa      	bls.n	8001018 <_free_r+0x48>
 8001022:	6819      	ldr	r1, [r3, #0]
 8001024:	1858      	adds	r0, r3, r1
 8001026:	42a0      	cmp	r0, r4
 8001028:	d10b      	bne.n	8001042 <_free_r+0x72>
 800102a:	6820      	ldr	r0, [r4, #0]
 800102c:	4401      	add	r1, r0
 800102e:	1858      	adds	r0, r3, r1
 8001030:	4282      	cmp	r2, r0
 8001032:	6019      	str	r1, [r3, #0]
 8001034:	d1de      	bne.n	8000ff4 <_free_r+0x24>
 8001036:	6810      	ldr	r0, [r2, #0]
 8001038:	6852      	ldr	r2, [r2, #4]
 800103a:	4401      	add	r1, r0
 800103c:	6019      	str	r1, [r3, #0]
 800103e:	605a      	str	r2, [r3, #4]
 8001040:	e7d8      	b.n	8000ff4 <_free_r+0x24>
 8001042:	d902      	bls.n	800104a <_free_r+0x7a>
 8001044:	230c      	movs	r3, #12
 8001046:	602b      	str	r3, [r5, #0]
 8001048:	e7d4      	b.n	8000ff4 <_free_r+0x24>
 800104a:	6820      	ldr	r0, [r4, #0]
 800104c:	1821      	adds	r1, r4, r0
 800104e:	428a      	cmp	r2, r1
 8001050:	bf01      	itttt	eq
 8001052:	6811      	ldreq	r1, [r2, #0]
 8001054:	6852      	ldreq	r2, [r2, #4]
 8001056:	1809      	addeq	r1, r1, r0
 8001058:	6021      	streq	r1, [r4, #0]
 800105a:	6062      	str	r2, [r4, #4]
 800105c:	605c      	str	r4, [r3, #4]
 800105e:	e7c9      	b.n	8000ff4 <_free_r+0x24>
 8001060:	bd38      	pop	{r3, r4, r5, pc}
 8001062:	bf00      	nop
 8001064:	20000864 	.word	0x20000864

08001068 <_malloc_r>:
 8001068:	b570      	push	{r4, r5, r6, lr}
 800106a:	1ccd      	adds	r5, r1, #3
 800106c:	f025 0503 	bic.w	r5, r5, #3
 8001070:	3508      	adds	r5, #8
 8001072:	2d0c      	cmp	r5, #12
 8001074:	bf38      	it	cc
 8001076:	250c      	movcc	r5, #12
 8001078:	2d00      	cmp	r5, #0
 800107a:	4606      	mov	r6, r0
 800107c:	db01      	blt.n	8001082 <_malloc_r+0x1a>
 800107e:	42a9      	cmp	r1, r5
 8001080:	d903      	bls.n	800108a <_malloc_r+0x22>
 8001082:	230c      	movs	r3, #12
 8001084:	6033      	str	r3, [r6, #0]
 8001086:	2000      	movs	r0, #0
 8001088:	bd70      	pop	{r4, r5, r6, pc}
 800108a:	f000 f87d 	bl	8001188 <__malloc_lock>
 800108e:	4a21      	ldr	r2, [pc, #132]	; (8001114 <_malloc_r+0xac>)
 8001090:	6814      	ldr	r4, [r2, #0]
 8001092:	4621      	mov	r1, r4
 8001094:	b991      	cbnz	r1, 80010bc <_malloc_r+0x54>
 8001096:	4c20      	ldr	r4, [pc, #128]	; (8001118 <_malloc_r+0xb0>)
 8001098:	6823      	ldr	r3, [r4, #0]
 800109a:	b91b      	cbnz	r3, 80010a4 <_malloc_r+0x3c>
 800109c:	4630      	mov	r0, r6
 800109e:	f000 f863 	bl	8001168 <_sbrk_r>
 80010a2:	6020      	str	r0, [r4, #0]
 80010a4:	4629      	mov	r1, r5
 80010a6:	4630      	mov	r0, r6
 80010a8:	f000 f85e 	bl	8001168 <_sbrk_r>
 80010ac:	1c43      	adds	r3, r0, #1
 80010ae:	d124      	bne.n	80010fa <_malloc_r+0x92>
 80010b0:	230c      	movs	r3, #12
 80010b2:	4630      	mov	r0, r6
 80010b4:	6033      	str	r3, [r6, #0]
 80010b6:	f000 f868 	bl	800118a <__malloc_unlock>
 80010ba:	e7e4      	b.n	8001086 <_malloc_r+0x1e>
 80010bc:	680b      	ldr	r3, [r1, #0]
 80010be:	1b5b      	subs	r3, r3, r5
 80010c0:	d418      	bmi.n	80010f4 <_malloc_r+0x8c>
 80010c2:	2b0b      	cmp	r3, #11
 80010c4:	d90f      	bls.n	80010e6 <_malloc_r+0x7e>
 80010c6:	600b      	str	r3, [r1, #0]
 80010c8:	18cc      	adds	r4, r1, r3
 80010ca:	50cd      	str	r5, [r1, r3]
 80010cc:	4630      	mov	r0, r6
 80010ce:	f000 f85c 	bl	800118a <__malloc_unlock>
 80010d2:	f104 000b 	add.w	r0, r4, #11
 80010d6:	1d23      	adds	r3, r4, #4
 80010d8:	f020 0007 	bic.w	r0, r0, #7
 80010dc:	1ac3      	subs	r3, r0, r3
 80010de:	d0d3      	beq.n	8001088 <_malloc_r+0x20>
 80010e0:	425a      	negs	r2, r3
 80010e2:	50e2      	str	r2, [r4, r3]
 80010e4:	e7d0      	b.n	8001088 <_malloc_r+0x20>
 80010e6:	684b      	ldr	r3, [r1, #4]
 80010e8:	428c      	cmp	r4, r1
 80010ea:	bf16      	itet	ne
 80010ec:	6063      	strne	r3, [r4, #4]
 80010ee:	6013      	streq	r3, [r2, #0]
 80010f0:	460c      	movne	r4, r1
 80010f2:	e7eb      	b.n	80010cc <_malloc_r+0x64>
 80010f4:	460c      	mov	r4, r1
 80010f6:	6849      	ldr	r1, [r1, #4]
 80010f8:	e7cc      	b.n	8001094 <_malloc_r+0x2c>
 80010fa:	1cc4      	adds	r4, r0, #3
 80010fc:	f024 0403 	bic.w	r4, r4, #3
 8001100:	42a0      	cmp	r0, r4
 8001102:	d005      	beq.n	8001110 <_malloc_r+0xa8>
 8001104:	1a21      	subs	r1, r4, r0
 8001106:	4630      	mov	r0, r6
 8001108:	f000 f82e 	bl	8001168 <_sbrk_r>
 800110c:	3001      	adds	r0, #1
 800110e:	d0cf      	beq.n	80010b0 <_malloc_r+0x48>
 8001110:	6025      	str	r5, [r4, #0]
 8001112:	e7db      	b.n	80010cc <_malloc_r+0x64>
 8001114:	20000864 	.word	0x20000864
 8001118:	20000868 	.word	0x20000868

0800111c <_realloc_r>:
 800111c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800111e:	4607      	mov	r7, r0
 8001120:	4614      	mov	r4, r2
 8001122:	460e      	mov	r6, r1
 8001124:	b921      	cbnz	r1, 8001130 <_realloc_r+0x14>
 8001126:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800112a:	4611      	mov	r1, r2
 800112c:	f7ff bf9c 	b.w	8001068 <_malloc_r>
 8001130:	b922      	cbnz	r2, 800113c <_realloc_r+0x20>
 8001132:	f7ff ff4d 	bl	8000fd0 <_free_r>
 8001136:	4625      	mov	r5, r4
 8001138:	4628      	mov	r0, r5
 800113a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800113c:	f000 f826 	bl	800118c <_malloc_usable_size_r>
 8001140:	42a0      	cmp	r0, r4
 8001142:	d20f      	bcs.n	8001164 <_realloc_r+0x48>
 8001144:	4621      	mov	r1, r4
 8001146:	4638      	mov	r0, r7
 8001148:	f7ff ff8e 	bl	8001068 <_malloc_r>
 800114c:	4605      	mov	r5, r0
 800114e:	2800      	cmp	r0, #0
 8001150:	d0f2      	beq.n	8001138 <_realloc_r+0x1c>
 8001152:	4631      	mov	r1, r6
 8001154:	4622      	mov	r2, r4
 8001156:	f7ff ff17 	bl	8000f88 <memcpy>
 800115a:	4631      	mov	r1, r6
 800115c:	4638      	mov	r0, r7
 800115e:	f7ff ff37 	bl	8000fd0 <_free_r>
 8001162:	e7e9      	b.n	8001138 <_realloc_r+0x1c>
 8001164:	4635      	mov	r5, r6
 8001166:	e7e7      	b.n	8001138 <_realloc_r+0x1c>

08001168 <_sbrk_r>:
 8001168:	b538      	push	{r3, r4, r5, lr}
 800116a:	2300      	movs	r3, #0
 800116c:	4c05      	ldr	r4, [pc, #20]	; (8001184 <_sbrk_r+0x1c>)
 800116e:	4605      	mov	r5, r0
 8001170:	4608      	mov	r0, r1
 8001172:	6023      	str	r3, [r4, #0]
 8001174:	f7ff f922 	bl	80003bc <_sbrk>
 8001178:	1c43      	adds	r3, r0, #1
 800117a:	d102      	bne.n	8001182 <_sbrk_r+0x1a>
 800117c:	6823      	ldr	r3, [r4, #0]
 800117e:	b103      	cbz	r3, 8001182 <_sbrk_r+0x1a>
 8001180:	602b      	str	r3, [r5, #0]
 8001182:	bd38      	pop	{r3, r4, r5, pc}
 8001184:	20000870 	.word	0x20000870

08001188 <__malloc_lock>:
 8001188:	4770      	bx	lr

0800118a <__malloc_unlock>:
 800118a:	4770      	bx	lr

0800118c <_malloc_usable_size_r>:
 800118c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001190:	1f18      	subs	r0, r3, #4
 8001192:	2b00      	cmp	r3, #0
 8001194:	bfbc      	itt	lt
 8001196:	580b      	ldrlt	r3, [r1, r0]
 8001198:	18c0      	addlt	r0, r0, r3
 800119a:	4770      	bx	lr

0800119c <_init>:
 800119c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800119e:	bf00      	nop
 80011a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80011a2:	bc08      	pop	{r3}
 80011a4:	469e      	mov	lr, r3
 80011a6:	4770      	bx	lr

080011a8 <_fini>:
 80011a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011aa:	bf00      	nop
 80011ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80011ae:	bc08      	pop	{r3}
 80011b0:	469e      	mov	lr, r3
 80011b2:	4770      	bx	lr
